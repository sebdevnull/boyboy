/**
 * @file add_sub.cpp
 * @brief Unit tests for ADD, ADC, SUB and SBC CPU instructions.
 *
 * @license GPLv3 (see LICENSE file)
 */

#include <gtest/gtest.h>

// Helpers
#include "helpers/cpu_fixtures.h"
#include "helpers/cpu_params.h"

using boyboy::cpu::Opcode;
using boyboy::cpu::Reg16Name;
using boyboy::cpu::Reg8Name;

using boyboy::test::cpu::InstrParam;
using boyboy::test::cpu::InstrTest;
using boyboy::test::cpu::OperandType;

// -----------------------------
// Test types
// -----------------------------
using AddR8Test  = InstrTest<InstrParam>;
using AddHLTest  = InstrTest<InstrParam>;
using AddImmTest = InstrTest<InstrParam>;
using AdcR8Test  = InstrTest<InstrParam>;
using AdcHLTest  = InstrTest<InstrParam>;
using AdcImmTest = InstrTest<InstrParam>;
using SubR8Test  = InstrTest<InstrParam>;
using SubHLTest  = InstrTest<InstrParam>;
using SubImmTest = InstrTest<InstrParam>;
using SbcR8Test  = InstrTest<InstrParam>;
using SbcHLTest  = InstrTest<InstrParam>;
using SbcImmTest = InstrTest<InstrParam>;

// -----------------------------
// Test definitions
// -----------------------------
TEST_P(AddR8Test, Works) { run_test(); }
TEST_P(AddHLTest, Works) { run_test(); }
TEST_P(AddImmTest, Works) { run_test(); }
TEST_P(AdcR8Test, Works) { run_test(); }
TEST_P(AdcHLTest, Works) { run_test(); }
TEST_P(AdcImmTest, Works) { run_test(); }
TEST_P(SubR8Test, Works) { run_test(); }
TEST_P(SubHLTest, Works) { run_test(); }
TEST_P(SubImmTest, Works) { run_test(); }
TEST_P(SbcR8Test, Works) { run_test(); }
TEST_P(SbcHLTest, Works) { run_test(); }
TEST_P(SbcImmTest, Works) { run_test(); }

// -----------------------------
// Parameter instantiations
// -----------------------------
// ADD A, r8
INSTANTIATE_TEST_SUITE_P(AddInstructions,
                         AddR8Test,
                         ::testing::Values(
                             InstrParam{
                                 .opcode         = Opcode::ADD_A_B,
                                 .src            = Reg8Name::B,
                                 .dst            = Reg8Name::A,
                                 .initial_a      = 0x11,
                                 .src_value      = uint8_t{0xFE},
                                 .expected_value = uint8_t{0x0F},
                                 .expect_c       = true,
                                 .name           = "B_CarryOverflow",
                             },
                             InstrParam{
                                 .opcode         = Opcode::ADD_A_C,
                                 .src            = Reg8Name::C,
                                 .dst            = Reg8Name::A,
                                 .initial_a      = 0x11,
                                 .src_value      = uint8_t{0xEF},
                                 .expected_value = uint8_t{0x00},
                                 .expect_z       = true,
                                 .expect_h       = true,
                                 .expect_c       = true,
                                 .name           = "C_ZeroFlagSet",
                             },
                             InstrParam{
                                 .opcode         = Opcode::ADD_A_D,
                                 .src            = Reg8Name::D,
                                 .dst            = Reg8Name::A,
                                 .initial_a      = 0x11,
                                 .src_value      = uint8_t{0x0F},
                                 .expected_value = uint8_t{0x20},
                                 .expect_h       = true,
                                 .name           = "D_HalfCarry",
                             },
                             InstrParam{
                                 .opcode         = Opcode::ADD_A_A,
                                 .src            = Reg8Name::A,
                                 .src_value      = uint8_t{0x11},
                                 .expected_value = uint8_t{0x22},
                                 .name           = "A_Normal",
                             },
                             InstrParam{
                                 .opcode         = Opcode::ADD_A_A,
                                 .src            = Reg8Name::A,
                                 .src_value      = uint8_t{0x0F},
                                 .expected_value = uint8_t{0x1E},
                                 .expect_h       = true,
                                 .name           = "A_HalfCarry",
                             },
                             InstrParam{
                                 .opcode         = Opcode::ADD_A_A,
                                 .src            = Reg8Name::A,
                                 .src_value      = uint8_t{0xFF},
                                 .expected_value = uint8_t{0xFE},
                                 .expect_h       = true,
                                 .expect_c       = true,
                                 .name           = "A_Overflow",
                             },
                             InstrParam{
                                 .opcode         = Opcode::ADD_A_E,
                                 .src            = Reg8Name::E,
                                 .dst            = Reg8Name::A,
                                 .initial_a      = 0x01,
                                 .src_value      = uint8_t{0xFF},
                                 .expected_value = uint8_t{0x00},
                                 .expect_z       = true,
                                 .expect_h       = true,
                                 .expect_c       = true,
                                 .name           = "E_OverflowZero",
                             },
                             InstrParam{
                                 .opcode         = Opcode::ADD_A_H,
                                 .src            = Reg8Name::H,
                                 .dst            = Reg8Name::A,
                                 .initial_a      = 0x11,
                                 .src_value      = uint8_t{0x01},
                                 .expected_value = uint8_t{0x12},
                                 .name           = "H_Normal",
                             },
                             InstrParam{
                                 .opcode         = Opcode::ADD_A_L,
                                 .src            = Reg8Name::L,
                                 .dst            = Reg8Name::A,
                                 .initial_a      = 0x11,
                                 .src_value      = uint8_t{0x0A},
                                 .expected_value = uint8_t{0x1B},
                                 .name           = "L_Normal",
                             }),
                         boyboy::test::cpu::param_name<InstrParam>);

// ADD A, [HL]
INSTANTIATE_TEST_SUITE_P(AddInstructions,
                         AddHLTest,
                         ::testing::Values(
                             InstrParam{
                                 .opcode         = Opcode::ADD_A_AT_HL,
                                 .src_op_type    = OperandType::Indirect,
                                 .src            = Reg16Name::HL,
                                 .dst            = Reg8Name::A,
                                 .src_addr       = 0x0000,
                                 .initial_a      = 0x00,
                                 .src_value      = uint8_t{0x01},
                                 .expected_value = uint8_t{0x01},
                                 .name           = "Normal",
                             },
                             InstrParam{
                                 .opcode         = Opcode::ADD_A_AT_HL,
                                 .src_op_type    = OperandType::Indirect,
                                 .src            = Reg16Name::HL,
                                 .dst            = Reg8Name::A,
                                 .src_addr       = 0x0123,
                                 .initial_a      = 0x0F,
                                 .src_value      = uint8_t{0x01},
                                 .expected_value = uint8_t{0x10},
                                 .expect_h       = true,
                                 .name           = "HalfCarry",
                             },
                             InstrParam{
                                 .opcode         = Opcode::ADD_A_AT_HL,
                                 .src_op_type    = OperandType::Indirect,
                                 .src            = Reg16Name::HL,
                                 .dst            = Reg8Name::A,
                                 .src_addr       = 0x4567,
                                 .initial_a      = 0x00,
                                 .src_value      = uint8_t{0x00},
                                 .expected_value = uint8_t{0x00},
                                 .expect_z       = true,
                                 .name           = "Zero",
                             },
                             InstrParam{
                                 .opcode         = Opcode::ADD_A_AT_HL,
                                 .src_op_type    = OperandType::Indirect,
                                 .src            = Reg16Name::HL,
                                 .dst            = Reg8Name::A,
                                 .src_addr       = 0x89AB,
                                 .initial_a      = 0xFF,
                                 .src_value      = uint8_t{0x10},
                                 .expected_value = uint8_t{0x0F},
                                 .expect_c       = true,
                                 .name           = "OverflowCarry",
                             },
                             InstrParam{
                                 .opcode         = Opcode::ADD_A_AT_HL,
                                 .src_op_type    = OperandType::Indirect,
                                 .src            = Reg16Name::HL,
                                 .dst            = Reg8Name::A,
                                 .src_addr       = 0xCDEF,
                                 .initial_a      = 0xFF,
                                 .src_value      = uint8_t{0x01},
                                 .expected_value = uint8_t{0x00},
                                 .expect_z       = true,
                                 .expect_h       = true,
                                 .expect_c       = true,
                                 .name           = "OverflowHalfCarryZero",
                             }),
                         boyboy::test::cpu::param_name<InstrParam>);

// ADD A, n8
INSTANTIATE_TEST_SUITE_P(AddInstructions,
                         AddImmTest,
                         ::testing::Values(
                             InstrParam{
                                 .opcode         = Opcode::ADD_A_N8,
                                 .src_op_type    = OperandType::Immediate,
                                 .dst            = Reg8Name::A,
                                 .initial_a      = 0x00,
                                 .src_value      = uint8_t{0x01},
                                 .expected_value = uint8_t{0x01},
                                 .name           = "Normal",
                             },
                             InstrParam{
                                 .opcode         = Opcode::ADD_A_N8,
                                 .src_op_type    = OperandType::Immediate,
                                 .dst            = Reg8Name::A,
                                 .initial_a      = 0x0F,
                                 .src_value      = uint8_t{0x01},
                                 .expected_value = uint8_t{0x10},
                                 .expect_h       = true,
                                 .name           = "HalfCarry",
                             },
                             InstrParam{
                                 .opcode         = Opcode::ADD_A_N8,
                                 .src_op_type    = OperandType::Immediate,
                                 .dst            = Reg8Name::A,
                                 .initial_a      = 0x00,
                                 .src_value      = uint8_t{0x00},
                                 .expected_value = uint8_t{0x00},
                                 .expect_z       = true,
                                 .name           = "Zero",
                             },
                             InstrParam{
                                 .opcode         = Opcode::ADD_A_N8,
                                 .src_op_type    = OperandType::Immediate,
                                 .dst            = Reg8Name::A,
                                 .initial_a      = 0xFF,
                                 .src_value      = uint8_t{0x10},
                                 .expected_value = uint8_t{0x0F},
                                 .expect_c       = true,
                                 .name           = "OverflowCarry",
                             },
                             InstrParam{
                                 .opcode         = Opcode::ADD_A_N8,
                                 .src_op_type    = OperandType::Immediate,
                                 .dst            = Reg8Name::A,
                                 .initial_a      = 0xFF,
                                 .src_value      = uint8_t{0x01},
                                 .expected_value = uint8_t{0x00},
                                 .expect_z       = true,
                                 .expect_h       = true,
                                 .expect_c       = true,
                                 .name           = "OverflowHalfCarryZero",
                             }),
                         boyboy::test::cpu::param_name<InstrParam>);

// ADC A, r8
INSTANTIATE_TEST_SUITE_P(AdcInstructions,
                         AdcR8Test,
                         ::testing::Values(
                             InstrParam{
                                 .opcode         = Opcode::ADC_A_A,
                                 .src            = Reg8Name::A,
                                 .carry_in       = false,
                                 .src_value      = uint8_t{0x55},
                                 .expected_value = uint8_t{0xAA},
                                 .name           = "A_A_NoCarry",
                             },
                             InstrParam{
                                 .opcode         = Opcode::ADC_A_A,
                                 .src            = Reg8Name::A,
                                 .carry_in       = true,
                                 .src_value      = uint8_t{0x55},
                                 .expected_value = uint8_t{0xAB},
                                 .name           = "A_A_WithCarry",
                             },
                             InstrParam{
                                 .opcode         = Opcode::ADC_A_B,
                                 .src            = Reg8Name::B,
                                 .dst            = Reg8Name::A,
                                 .initial_a      = 0x0F,
                                 .carry_in       = false,
                                 .src_value      = uint8_t{0x01},
                                 .expected_value = uint8_t{0x10},
                                 .expect_h       = true,
                                 .name           = "A_B_NoCarry",
                             },
                             InstrParam{
                                 .opcode         = Opcode::ADC_A_B,
                                 .src            = Reg8Name::B,
                                 .dst            = Reg8Name::A,
                                 .initial_a      = 0x0F,
                                 .carry_in       = true,
                                 .src_value      = uint8_t{0x01},
                                 .expected_value = uint8_t{0x11},
                                 .expect_h       = true,
                                 .name           = "A_B_WithCarry",
                             },
                             InstrParam{
                                 .opcode         = Opcode::ADC_A_C,
                                 .src            = Reg8Name::C,
                                 .dst            = Reg8Name::A,
                                 .initial_a      = 0x7F,
                                 .carry_in       = false,
                                 .src_value      = uint8_t{0x01},
                                 .expected_value = uint8_t{0x80},
                                 .expect_h       = true,
                                 .name           = "A_C_OverflowBit7_NoCarry",
                             },
                             InstrParam{
                                 .opcode         = Opcode::ADC_A_C,
                                 .src            = Reg8Name::C,
                                 .dst            = Reg8Name::A,
                                 .initial_a      = 0x7F,
                                 .carry_in       = true,
                                 .src_value      = uint8_t{0x01},
                                 .expected_value = uint8_t{0x81},
                                 .expect_h       = true,
                                 .name           = "A_C_OverflowBit7_WithCarry",
                             },
                             InstrParam{
                                 .opcode         = Opcode::ADC_A_D,
                                 .src            = Reg8Name::D,
                                 .dst            = Reg8Name::A,
                                 .initial_a      = 0x00,
                                 .carry_in       = false,
                                 .src_value      = uint8_t{0x00},
                                 .expected_value = uint8_t{0x00},
                                 .expect_z       = true,
                                 .name           = "A_D_Zero_NoCarry",
                             },
                             InstrParam{
                                 .opcode         = Opcode::ADC_A_D,
                                 .src            = Reg8Name::D,
                                 .dst            = Reg8Name::A,
                                 .initial_a      = 0x00,
                                 .carry_in       = true,
                                 .src_value      = uint8_t{0x00},
                                 .expected_value = uint8_t{0x01},
                                 .name           = "A_D_Zero_WithCarry",
                             },
                             InstrParam{
                                 .opcode         = Opcode::ADC_A_E,
                                 .src            = Reg8Name::E,
                                 .dst            = Reg8Name::A,
                                 .initial_a      = 0xFF,
                                 .carry_in       = false,
                                 .src_value      = uint8_t{0x01},
                                 .expected_value = uint8_t{0x00},
                                 .expect_z       = true,
                                 .expect_h       = true,
                                 .expect_c       = true,
                                 .name           = "A_E_CarryOut_NoCarry",
                             },
                             InstrParam{
                                 .opcode         = Opcode::ADC_A_E,
                                 .src            = Reg8Name::E,
                                 .dst            = Reg8Name::A,
                                 .initial_a      = 0xFF,
                                 .carry_in       = true,
                                 .src_value      = uint8_t{0x01},
                                 .expected_value = uint8_t{0x01},
                                 .expect_h       = true,
                                 .expect_c       = true,
                                 .name           = "A_E_CarryOut_WithCarry",
                             },
                             InstrParam{
                                 .opcode         = Opcode::ADC_A_H,
                                 .src            = Reg8Name::H,
                                 .dst            = Reg8Name::A,
                                 .initial_a      = 0x0F,
                                 .carry_in       = false,
                                 .src_value      = uint8_t{0x01},
                                 .expected_value = uint8_t{0x10},
                                 .expect_h       = true,
                                 .name           = "A_H_HalfCarry_NoCarry",
                             },
                             InstrParam{
                                 .opcode         = Opcode::ADC_A_H,
                                 .src            = Reg8Name::H,
                                 .dst            = Reg8Name::A,
                                 .initial_a      = 0x0F,
                                 .carry_in       = true,
                                 .src_value      = uint8_t{0x01},
                                 .expected_value = uint8_t{0x11},
                                 .expect_h       = true,
                                 .name           = "A_H_HalfCarry_WithCarry",
                             },
                             InstrParam{
                                 .opcode         = Opcode::ADC_A_L,
                                 .src            = Reg8Name::L,
                                 .dst            = Reg8Name::A,
                                 .initial_a      = 0x12,
                                 .carry_in       = false,
                                 .src_value      = uint8_t{0x34},
                                 .expected_value = uint8_t{0x46},
                                 .name           = "A_L_Normal_NoCarry",
                             },
                             InstrParam{
                                 .opcode         = Opcode::ADC_A_L,
                                 .src            = Reg8Name::L,
                                 .dst            = Reg8Name::A,
                                 .initial_a      = 0x12,
                                 .carry_in       = true,
                                 .src_value      = uint8_t{0x34},
                                 .expected_value = uint8_t{0x47},
                                 .name           = "A_L_Normal_WithCarry",
                             }),
                         boyboy::test::cpu::param_name<InstrParam>);

// ADC A, [HL]
INSTANTIATE_TEST_SUITE_P(AddInstructions,
                         AdcHLTest,
                         ::testing::Values(
                             InstrParam{
                                 .opcode         = Opcode::ADC_A_AT_HL,
                                 .src_op_type    = OperandType::Indirect,
                                 .src            = Reg16Name::HL,
                                 .dst            = Reg8Name::A,
                                 .src_addr       = 0x0000,
                                 .initial_a      = 0x00,
                                 .carry_in       = false,
                                 .src_value      = uint8_t{0x01},
                                 .expected_value = uint8_t{0x01},
                                 .name           = "NormalNoCarryIn",
                             },
                             InstrParam{
                                 .opcode         = Opcode::ADC_A_AT_HL,
                                 .src_op_type    = OperandType::Indirect,
                                 .src            = Reg16Name::HL,
                                 .dst            = Reg8Name::A,
                                 .src_addr       = 0x0000,
                                 .initial_a      = 0x00,
                                 .carry_in       = true,
                                 .src_value      = uint8_t{0x01},
                                 .expected_value = uint8_t{0x02},
                                 .name           = "NormalCarryIn",
                             },
                             InstrParam{
                                 .opcode         = Opcode::ADC_A_AT_HL,
                                 .src_op_type    = OperandType::Indirect,
                                 .src            = Reg16Name::HL,
                                 .dst            = Reg8Name::A,
                                 .src_addr       = 0x0123,
                                 .initial_a      = 0x0F,
                                 .carry_in       = false,
                                 .src_value      = uint8_t{0x01},
                                 .expected_value = uint8_t{0x10},
                                 .expect_h       = true,
                                 .name           = "HalfCarryNoCarryIn",
                             },
                             InstrParam{
                                 .opcode         = Opcode::ADC_A_AT_HL,
                                 .src_op_type    = OperandType::Indirect,
                                 .src            = Reg16Name::HL,
                                 .dst            = Reg8Name::A,
                                 .src_addr       = 0x0123,
                                 .initial_a      = 0x0F,
                                 .carry_in       = true,
                                 .src_value      = uint8_t{0x01},
                                 .expected_value = uint8_t{0x11},
                                 .expect_h       = true,
                                 .name           = "HalfCarryCarryIn",
                             },
                             InstrParam{
                                 .opcode         = Opcode::ADC_A_AT_HL,
                                 .src_op_type    = OperandType::Indirect,
                                 .src            = Reg16Name::HL,
                                 .dst            = Reg8Name::A,
                                 .src_addr       = 0x4567,
                                 .initial_a      = 0x00,
                                 .carry_in       = false,
                                 .src_value      = uint8_t{0x00},
                                 .expected_value = uint8_t{0x00},
                                 .expect_z       = true,
                                 .name           = "ZeroNoCarryIn",
                             },
                             InstrParam{
                                 .opcode         = Opcode::ADC_A_AT_HL,
                                 .src_op_type    = OperandType::Indirect,
                                 .src            = Reg16Name::HL,
                                 .dst            = Reg8Name::A,
                                 .src_addr       = 0x4567,
                                 .initial_a      = 0x00,
                                 .carry_in       = true,
                                 .src_value      = uint8_t{0x00},
                                 .expected_value = uint8_t{0x01},
                                 .expect_z       = false,
                                 .name           = "NoZeroCarryIn",
                             },
                             InstrParam{
                                 .opcode         = Opcode::ADC_A_AT_HL,
                                 .src_op_type    = OperandType::Indirect,
                                 .src            = Reg16Name::HL,
                                 .dst            = Reg8Name::A,
                                 .src_addr       = 0x89AB,
                                 .initial_a      = 0xFF,
                                 .carry_in       = false,
                                 .src_value      = uint8_t{0x10},
                                 .expected_value = uint8_t{0x0F},
                                 .expect_c       = true,
                                 .name           = "OverflowNoCarryIn",
                             },
                             InstrParam{
                                 .opcode         = Opcode::ADC_A_AT_HL,
                                 .src_op_type    = OperandType::Indirect,
                                 .src            = Reg16Name::HL,
                                 .dst            = Reg8Name::A,
                                 .src_addr       = 0x89AB,
                                 .initial_a      = 0xFE,
                                 .carry_in       = true,
                                 .src_value      = uint8_t{0x10},
                                 .expected_value = uint8_t{0x0F},
                                 .expect_c       = true,
                                 .name           = "OverflowCarryIn",
                             },
                             InstrParam{
                                 .opcode         = Opcode::ADC_A_AT_HL,
                                 .src_op_type    = OperandType::Indirect,
                                 .src            = Reg16Name::HL,
                                 .dst            = Reg8Name::A,
                                 .src_addr       = 0xCDEF,
                                 .initial_a      = 0xFF,
                                 .carry_in       = false,
                                 .src_value      = uint8_t{0x01},
                                 .expected_value = uint8_t{0x00},
                                 .expect_z       = true,
                                 .expect_h       = true,
                                 .expect_c       = true,
                                 .name           = "OverflowZeroNoCarry",
                             },
                             InstrParam{
                                 .opcode         = Opcode::ADC_A_AT_HL,
                                 .src_op_type    = OperandType::Indirect,
                                 .src            = Reg16Name::HL,
                                 .dst            = Reg8Name::A,
                                 .src_addr       = 0xCDEF,
                                 .initial_a      = 0xFF,
                                 .carry_in       = true,
                                 .src_value      = uint8_t{0x00},
                                 .expected_value = uint8_t{0x00},
                                 .expect_z       = true,
                                 .expect_h       = true,
                                 .expect_c       = true,
                                 .name           = "OverflowZeroCarryIn",
                             }),
                         boyboy::test::cpu::param_name<InstrParam>);

// ADC A, n8
INSTANTIATE_TEST_SUITE_P(AddInstructions,
                         AdcImmTest,
                         ::testing::Values(
                             InstrParam{
                                 .opcode         = Opcode::ADC_A_N8,
                                 .src_op_type    = OperandType::Immediate,
                                 .dst            = Reg8Name::A,
                                 .initial_a      = 0x00,
                                 .carry_in       = false,
                                 .src_value      = uint8_t{0x01},
                                 .expected_value = uint8_t{0x01},
                                 .name           = "NormalNoCarryIn",
                             },
                             InstrParam{
                                 .opcode         = Opcode::ADC_A_N8,
                                 .src_op_type    = OperandType::Immediate,
                                 .dst            = Reg8Name::A,
                                 .initial_a      = 0x00,
                                 .carry_in       = true,
                                 .src_value      = uint8_t{0x01},
                                 .expected_value = uint8_t{0x02},
                                 .name           = "NormalCarryIn",
                             },
                             InstrParam{
                                 .opcode         = Opcode::ADC_A_N8,
                                 .src_op_type    = OperandType::Immediate,
                                 .dst            = Reg8Name::A,
                                 .initial_a      = 0x0F,
                                 .carry_in       = false,
                                 .src_value      = uint8_t{0x01},
                                 .expected_value = uint8_t{0x10},
                                 .expect_h       = true,
                                 .name           = "HalfCarryNoCarryIn",
                             },
                             InstrParam{
                                 .opcode         = Opcode::ADC_A_N8,
                                 .src_op_type    = OperandType::Immediate,
                                 .dst            = Reg8Name::A,
                                 .initial_a      = 0x0F,
                                 .carry_in       = true,
                                 .src_value      = uint8_t{0x01},
                                 .expected_value = uint8_t{0x11},
                                 .expect_h       = true,
                                 .name           = "HalfCarryCarryIn",
                             },
                             InstrParam{
                                 .opcode         = Opcode::ADC_A_N8,
                                 .src_op_type    = OperandType::Immediate,
                                 .dst            = Reg8Name::A,
                                 .initial_a      = 0x00,
                                 .carry_in       = false,
                                 .src_value      = uint8_t{0x00},
                                 .expected_value = uint8_t{0x00},
                                 .expect_z       = true,
                                 .name           = "ZeroNoCarryIn",
                             },
                             InstrParam{
                                 .opcode         = Opcode::ADC_A_N8,
                                 .src_op_type    = OperandType::Immediate,
                                 .dst            = Reg8Name::A,
                                 .initial_a      = 0x00,
                                 .carry_in       = true,
                                 .src_value      = uint8_t{0x00},
                                 .expected_value = uint8_t{0x01},
                                 .expect_z       = false,
                                 .name           = "NoZeroCarryIn",
                             },
                             InstrParam{
                                 .opcode         = Opcode::ADC_A_N8,
                                 .src_op_type    = OperandType::Immediate,
                                 .dst            = Reg8Name::A,
                                 .initial_a      = 0xFF,
                                 .carry_in       = false,
                                 .src_value      = uint8_t{0x10},
                                 .expected_value = uint8_t{0x0F},
                                 .expect_c       = true,
                                 .name           = "OverflowNoCarryIn",
                             },
                             InstrParam{
                                 .opcode         = Opcode::ADC_A_N8,
                                 .src_op_type    = OperandType::Immediate,
                                 .dst            = Reg8Name::A,
                                 .initial_a      = 0xFE,
                                 .carry_in       = true,
                                 .src_value      = uint8_t{0x10},
                                 .expected_value = uint8_t{0x0F},
                                 .expect_c       = true,
                                 .name           = "OverflowCarryIn",
                             },
                             InstrParam{
                                 .opcode         = Opcode::ADC_A_N8,
                                 .src_op_type    = OperandType::Immediate,
                                 .dst            = Reg8Name::A,
                                 .initial_a      = 0xFF,
                                 .carry_in       = false,
                                 .src_value      = uint8_t{0x01},
                                 .expected_value = uint8_t{0x00},
                                 .expect_z       = true,
                                 .expect_h       = true,
                                 .expect_c       = true,
                                 .name           = "OverflowZeroNoCarry",
                             },
                             InstrParam{
                                 .opcode         = Opcode::ADC_A_N8,
                                 .src_op_type    = OperandType::Immediate,
                                 .dst            = Reg8Name::A,
                                 .initial_a      = 0xFF,
                                 .carry_in       = true,
                                 .src_value      = uint8_t{0x00},
                                 .expected_value = uint8_t{0x00},
                                 .expect_z       = true,
                                 .expect_h       = true,
                                 .expect_c       = true,
                                 .name           = "OverflowZeroCarryIn",
                             }),
                         boyboy::test::cpu::param_name<InstrParam>);

// SUB A, r8
INSTANTIATE_TEST_SUITE_P(SubInstructions,
                         SubR8Test,
                         ::testing::Values(
                             InstrParam{
                                 .opcode         = Opcode::SUB_A_B,
                                 .src            = Reg8Name::B,
                                 .dst            = Reg8Name::A,
                                 .initial_a      = 0x11,
                                 .src_value      = uint8_t{0x12},
                                 .expected_value = uint8_t{0xFF},
                                 .expect_n       = true,
                                 .expect_h       = true,
                                 .expect_c       = true,
                                 .name           = "B_Underflow",
                             },
                             InstrParam{
                                 .opcode         = Opcode::SUB_A_C,
                                 .src            = Reg8Name::C,
                                 .dst            = Reg8Name::A,
                                 .initial_a      = 0x11,
                                 .src_value      = uint8_t{0x02},
                                 .expected_value = uint8_t{0x0F},
                                 .expect_n       = true,
                                 .expect_h       = true,
                                 .name           = "C_HalfCarry",
                             },
                             InstrParam{
                                 .opcode         = Opcode::SUB_A_D,
                                 .src            = Reg8Name::D,
                                 .dst            = Reg8Name::A,
                                 .initial_a      = 0x11,
                                 .src_value      = uint8_t{0x11},
                                 .expected_value = uint8_t{0x00},
                                 .expect_z       = true,
                                 .expect_n       = true,
                                 .name           = "D_Zero",
                             },

                             // Normal tests
                             InstrParam{
                                 .opcode         = Opcode::SUB_A_A,
                                 .src            = Reg8Name::A,
                                 .src_value      = uint8_t{0xFF},
                                 .expected_value = uint8_t{0x00},
                                 .expect_z       = true,
                                 .expect_n       = true,
                                 .name           = "A_Normal",
                             },
                             InstrParam{
                                 .opcode         = Opcode::SUB_A_E,
                                 .src            = Reg8Name::E,
                                 .dst            = Reg8Name::A,
                                 .initial_a      = 0x11,
                                 .src_value      = uint8_t{0x01},
                                 .expected_value = uint8_t{0x10},
                                 .expect_n       = true,
                                 .name           = "E_Normal",
                             },
                             InstrParam{
                                 .opcode         = Opcode::SUB_A_H,
                                 .src            = Reg8Name::H,
                                 .dst            = Reg8Name::A,
                                 .initial_a      = 0x11,
                                 .src_value      = uint8_t{0x0A},
                                 .expected_value = uint8_t{0x07},
                                 .expect_n       = true,
                                 .expect_h       = true,
                                 .name           = "H_Normal",
                             },
                             InstrParam{
                                 .opcode         = Opcode::SUB_A_L,
                                 .src            = Reg8Name::L,
                                 .dst            = Reg8Name::A,
                                 .initial_a      = 0x11,
                                 .src_value      = uint8_t{0x0F},
                                 .expected_value = uint8_t{0x02},
                                 .expect_n       = true,
                                 .expect_h       = true,
                                 .name           = "L_Normal",
                             }),
                         boyboy::test::cpu::param_name<InstrParam>);

// SUB A, [HL]
INSTANTIATE_TEST_SUITE_P(SubInstructions,
                         SubHLTest,
                         ::testing::Values(
                             InstrParam{
                                 .opcode         = Opcode::SUB_A_AT_HL,
                                 .src_op_type    = OperandType::Indirect,
                                 .src            = Reg16Name::HL,
                                 .dst            = Reg8Name::A,
                                 .src_addr       = 0x0000,
                                 .initial_a      = 0x02,
                                 .src_value      = uint8_t{0x01},
                                 .expected_value = uint8_t{0x01},
                                 .expect_n       = true,
                                 .name           = "Normal",
                             },
                             InstrParam{
                                 .opcode         = Opcode::SUB_A_AT_HL,
                                 .src_op_type    = OperandType::Indirect,
                                 .src            = Reg16Name::HL,
                                 .dst            = Reg8Name::A,
                                 .src_addr       = 0x0123,
                                 .initial_a      = 0x01,
                                 .src_value      = uint8_t{0x01},
                                 .expected_value = uint8_t{0x00},
                                 .expect_z       = true,
                                 .expect_n       = true,
                                 .name           = "Zero",
                             },
                             InstrParam{
                                 .opcode         = Opcode::SUB_A_AT_HL,
                                 .src_op_type    = OperandType::Indirect,
                                 .src            = Reg16Name::HL,
                                 .dst            = Reg8Name::A,
                                 .src_addr       = 0x4567,
                                 .initial_a      = 0x10,
                                 .src_value      = uint8_t{0x01},
                                 .expected_value = uint8_t{0x0F},
                                 .expect_n       = true,
                                 .expect_h       = true,
                                 .name           = "HalfCarry",
                             },
                             InstrParam{
                                 .opcode         = Opcode::SUB_A_AT_HL,
                                 .src_op_type    = OperandType::Indirect,
                                 .src            = Reg16Name::HL,
                                 .dst            = Reg8Name::A,
                                 .src_addr       = 0x89AB,
                                 .initial_a      = 0x0F,
                                 .src_value      = uint8_t{0x10},
                                 .expected_value = uint8_t{0xFF},
                                 .expect_n       = true,
                                 .expect_c       = true,
                                 .name           = "UnderflowCarry",
                             },
                             InstrParam{
                                 .opcode         = Opcode::SUB_A_AT_HL,
                                 .src_op_type    = OperandType::Indirect,
                                 .src            = Reg16Name::HL,
                                 .dst            = Reg8Name::A,
                                 .src_addr       = 0xCDEF,
                                 .initial_a      = 0x10,
                                 .src_value      = uint8_t{0x11},
                                 .expected_value = uint8_t{0xFF},
                                 .expect_n       = true,
                                 .expect_h       = true,
                                 .expect_c       = true,
                                 .name           = "UnderflowCarryHalfCarry",
                             }),
                         boyboy::test::cpu::param_name<InstrParam>);

// SUB A, n8
INSTANTIATE_TEST_SUITE_P(SubInstructions,
                         SubImmTest,
                         ::testing::Values(
                             InstrParam{
                                 .opcode         = Opcode::SUB_A_N8,
                                 .src_op_type    = OperandType::Immediate,
                                 .dst            = Reg8Name::A,
                                 .initial_a      = 0x02,
                                 .src_value      = uint8_t{0x01},
                                 .expected_value = uint8_t{0x01},
                                 .expect_n       = true,
                                 .name           = "Normal",
                             },
                             InstrParam{
                                 .opcode         = Opcode::SUB_A_N8,
                                 .src_op_type    = OperandType::Immediate,
                                 .dst            = Reg8Name::A,
                                 .initial_a      = 0x01,
                                 .src_value      = uint8_t{0x01},
                                 .expected_value = uint8_t{0x00},
                                 .expect_z       = true,
                                 .expect_n       = true,
                                 .name           = "Zero",
                             },
                             InstrParam{
                                 .opcode         = Opcode::SUB_A_N8,
                                 .src_op_type    = OperandType::Immediate,
                                 .dst            = Reg8Name::A,
                                 .initial_a      = 0x10,
                                 .src_value      = uint8_t{0x01},
                                 .expected_value = uint8_t{0x0F},
                                 .expect_n       = true,
                                 .expect_h       = true,
                                 .name           = "HalfCarry",
                             },
                             InstrParam{
                                 .opcode         = Opcode::SUB_A_N8,
                                 .src_op_type    = OperandType::Immediate,
                                 .dst            = Reg8Name::A,
                                 .initial_a      = 0x0F,
                                 .src_value      = uint8_t{0x10},
                                 .expected_value = uint8_t{0xFF},
                                 .expect_n       = true,
                                 .expect_c       = true,
                                 .name           = "UnderflowCarry",
                             },
                             InstrParam{
                                 .opcode         = Opcode::SUB_A_N8,
                                 .src_op_type    = OperandType::Immediate,
                                 .dst            = Reg8Name::A,
                                 .initial_a      = 0x10,
                                 .src_value      = uint8_t{0x11},
                                 .expected_value = uint8_t{0xFF},
                                 .expect_n       = true,
                                 .expect_h       = true,
                                 .expect_c       = true,
                                 .name           = "UnderflowCarryHalfCarry",
                             }),
                         boyboy::test::cpu::param_name<InstrParam>);

// SBC A, r8
INSTANTIATE_TEST_SUITE_P(SbcInstructions,
                         SbcR8Test,
                         ::testing::Values(
                             InstrParam{
                                 .opcode         = Opcode::SBC_A_A,
                                 .src            = Reg8Name::A,
                                 .carry_in       = false,
                                 .src_value      = uint8_t{0x55},
                                 .expected_value = uint8_t{0x00},
                                 .expect_z       = true,
                                 .expect_n       = true,
                                 .name           = "A_A_NoCarry",
                             },
                             InstrParam{
                                 .opcode         = Opcode::SBC_A_A,
                                 .src            = Reg8Name::A,
                                 .carry_in       = true,
                                 .src_value      = uint8_t{0x55},
                                 .expected_value = uint8_t{0xFF},
                                 .expect_n       = true,
                                 .expect_h       = true,
                                 .expect_c       = true,
                                 .name           = "A_A_WithCarry",
                             },
                             InstrParam{
                                 .opcode         = Opcode::SBC_A_B,
                                 .src            = Reg8Name::B,
                                 .dst            = Reg8Name::A,
                                 .initial_a      = 0x10,
                                 .carry_in       = false,
                                 .src_value      = uint8_t{0x01},
                                 .expected_value = uint8_t{0x0F},
                                 .expect_n       = true,
                                 .expect_h       = true,
                                 .name           = "A_B_NoCarry",
                             },
                             InstrParam{
                                 .opcode         = Opcode::SBC_A_B,
                                 .src            = Reg8Name::B,
                                 .dst            = Reg8Name::A,
                                 .initial_a      = 0x10,
                                 .carry_in       = true,
                                 .src_value      = uint8_t{0x01},
                                 .expected_value = uint8_t{0x0E},
                                 .expect_n       = true,
                                 .expect_h       = true,
                                 .name           = "A_B_WithCarry",
                             },
                             InstrParam{
                                 .opcode         = Opcode::SBC_A_C,
                                 .src            = Reg8Name::C,
                                 .dst            = Reg8Name::A,
                                 .initial_a      = 0x00,
                                 .carry_in       = false,
                                 .src_value      = uint8_t{0x01},
                                 .expected_value = uint8_t{0xFF},
                                 .expect_n       = true,
                                 .expect_h       = true,
                                 .expect_c       = true,
                                 .name           = "A_C_Underflow_NoCarry",
                             },
                             InstrParam{
                                 .opcode         = Opcode::SBC_A_C,
                                 .src            = Reg8Name::C,
                                 .dst            = Reg8Name::A,
                                 .initial_a      = 0x00,
                                 .carry_in       = true,
                                 .src_value      = uint8_t{0x01},
                                 .expected_value = uint8_t{0xFE},
                                 .expect_n       = true,
                                 .expect_h       = true,
                                 .expect_c       = true,
                                 .name           = "A_C_Underflow_WithCarry",
                             },
                             InstrParam{
                                 .opcode         = Opcode::SBC_A_D,
                                 .src            = Reg8Name::D,
                                 .dst            = Reg8Name::A,
                                 .initial_a      = 0x01,
                                 .carry_in       = false,
                                 .src_value      = uint8_t{0x01},
                                 .expected_value = uint8_t{0x00},
                                 .expect_z       = true,
                                 .expect_n       = true,
                                 .name           = "A_D_Zero_NoCarry",
                             },
                             InstrParam{
                                 .opcode         = Opcode::SBC_A_D,
                                 .src            = Reg8Name::D,
                                 .dst            = Reg8Name::A,
                                 .initial_a      = 0x01,
                                 .carry_in       = true,
                                 .src_value      = uint8_t{0x01},
                                 .expected_value = uint8_t{0xFF},
                                 .expect_n       = true,
                                 .expect_h       = true,
                                 .expect_c       = true,
                                 .name           = "A_D_Zero_WithCarry",
                             },
                             InstrParam{
                                 .opcode         = Opcode::SBC_A_E,
                                 .src            = Reg8Name::E,
                                 .dst            = Reg8Name::A,
                                 .initial_a      = 0xFF,
                                 .carry_in       = false,
                                 .src_value      = uint8_t{0xFF},
                                 .expected_value = uint8_t{0x00},
                                 .expect_z       = true,
                                 .expect_n       = true,
                                 .name           = "A_E_Zero_NoCarry",
                             },
                             InstrParam{
                                 .opcode         = Opcode::SBC_A_E,
                                 .src            = Reg8Name::E,
                                 .dst            = Reg8Name::A,
                                 .initial_a      = 0xFF,
                                 .carry_in       = true,
                                 .src_value      = uint8_t{0xFF},
                                 .expected_value = uint8_t{0xFF},
                                 .expect_n       = true,
                                 .expect_h       = true,
                                 .expect_c       = true,
                                 .name           = "A_E_Zero_WithCarry",
                             },
                             InstrParam{
                                 .opcode         = Opcode::SBC_A_H,
                                 .src            = Reg8Name::H,
                                 .dst            = Reg8Name::A,
                                 .initial_a      = 0x10,
                                 .carry_in       = false,
                                 .src_value      = uint8_t{0x01},
                                 .expected_value = uint8_t{0x0F},
                                 .expect_n       = true,
                                 .expect_h       = true,
                                 .name           = "A_H_HalfBorrow_NoCarry",
                             },
                             InstrParam{
                                 .opcode         = Opcode::SBC_A_H,
                                 .src            = Reg8Name::H,
                                 .dst            = Reg8Name::A,
                                 .initial_a      = 0x10,
                                 .carry_in       = true,
                                 .src_value      = uint8_t{0x01},
                                 .expected_value = uint8_t{0x0E},
                                 .expect_n       = true,
                                 .expect_h       = true,
                                 .name           = "A_H_HalfBorrow_WithCarry",
                             },
                             InstrParam{
                                 .opcode         = Opcode::SBC_A_L,
                                 .src            = Reg8Name::L,
                                 .dst            = Reg8Name::A,
                                 .initial_a      = 0x20,
                                 .carry_in       = false,
                                 .src_value      = uint8_t{0x10},
                                 .expected_value = uint8_t{0x10},
                                 .expect_n       = true,
                                 .name           = "A_L_Normal_NoCarry",
                             },
                             InstrParam{
                                 .opcode         = Opcode::SBC_A_L,
                                 .src            = Reg8Name::L,
                                 .dst            = Reg8Name::A,
                                 .initial_a      = 0x20,
                                 .carry_in       = true,
                                 .src_value      = uint8_t{0x10},
                                 .expected_value = uint8_t{0x0F},
                                 .expect_n       = true,
                                 .expect_h       = true,
                                 .name           = "A_L_Normal_WithCarry",
                             }),
                         boyboy::test::cpu::param_name<InstrParam>);

// SBC A, [HL]
INSTANTIATE_TEST_SUITE_P(SubInstructions,
                         SbcHLTest,
                         ::testing::Values(
                             InstrParam{
                                 .opcode         = Opcode::SBC_A_AT_HL,
                                 .src_op_type    = OperandType::Indirect,
                                 .src            = Reg16Name::HL,
                                 .dst            = Reg8Name::A,
                                 .src_addr       = 0x0000,
                                 .initial_a      = 0x02,
                                 .carry_in       = false,
                                 .src_value      = uint8_t{0x01},
                                 .expected_value = uint8_t{0x01},
                                 .expect_n       = true,
                                 .name           = "NormalNoCarryIn",
                             },
                             InstrParam{
                                 .opcode         = Opcode::SBC_A_AT_HL,
                                 .src_op_type    = OperandType::Indirect,
                                 .src            = Reg16Name::HL,
                                 .dst            = Reg8Name::A,
                                 .src_addr       = 0x0000,
                                 .initial_a      = 0x03,
                                 .carry_in       = true,
                                 .src_value      = uint8_t{0x01},
                                 .expected_value = uint8_t{0x01},
                                 .expect_n       = true,
                                 .name           = "NormalCarryIn",
                             },
                             InstrParam{
                                 .opcode         = Opcode::SBC_A_AT_HL,
                                 .src_op_type    = OperandType::Indirect,
                                 .src            = Reg16Name::HL,
                                 .dst            = Reg8Name::A,
                                 .src_addr       = 0x0123,
                                 .initial_a      = 0x01,
                                 .carry_in       = false,
                                 .src_value      = uint8_t{0x01},
                                 .expected_value = uint8_t{0x00},
                                 .expect_z       = true,
                                 .expect_n       = true,
                                 .name           = "ZeroNoCarryIn",
                             },
                             InstrParam{
                                 .opcode         = Opcode::SBC_A_AT_HL,
                                 .src_op_type    = OperandType::Indirect,
                                 .src            = Reg16Name::HL,
                                 .dst            = Reg8Name::A,
                                 .src_addr       = 0x0123,
                                 .initial_a      = 0x02,
                                 .carry_in       = true,
                                 .src_value      = uint8_t{0x01},
                                 .expected_value = uint8_t{0x00},
                                 .expect_z       = true,
                                 .expect_n       = true,
                                 .name           = "ZeroCarryIn",
                             },
                             InstrParam{
                                 .opcode         = Opcode::SBC_A_AT_HL,
                                 .src_op_type    = OperandType::Indirect,
                                 .src            = Reg16Name::HL,
                                 .dst            = Reg8Name::A,
                                 .src_addr       = 0x4567,
                                 .initial_a      = 0x10,
                                 .carry_in       = false,
                                 .src_value      = uint8_t{0x01},
                                 .expected_value = uint8_t{0x0F},
                                 .expect_n       = true,
                                 .expect_h       = true,
                                 .name           = "HalfCarryNoCarryIn",
                             },
                             InstrParam{
                                 .opcode         = Opcode::SBC_A_AT_HL,
                                 .src_op_type    = OperandType::Indirect,
                                 .src            = Reg16Name::HL,
                                 .dst            = Reg8Name::A,
                                 .src_addr       = 0x4567,
                                 .initial_a      = 0x10,
                                 .carry_in       = true,
                                 .src_value      = uint8_t{0x01},
                                 .expected_value = uint8_t{0x0E},
                                 .expect_n       = true,
                                 .expect_h       = true,
                                 .name           = "HalfCarryCarryIn",
                             },
                             InstrParam{
                                 .opcode         = Opcode::SBC_A_AT_HL,
                                 .src_op_type    = OperandType::Indirect,
                                 .src            = Reg16Name::HL,
                                 .dst            = Reg8Name::A,
                                 .src_addr       = 0x89AB,
                                 .initial_a      = 0x0F,
                                 .carry_in       = false,
                                 .src_value      = uint8_t{0x10},
                                 .expected_value = uint8_t{0xFF},
                                 .expect_n       = true,
                                 .expect_c       = true,
                                 .name           = "UnderflowNoCarryIn",
                             },
                             InstrParam{
                                 .opcode         = Opcode::SBC_A_AT_HL,
                                 .src_op_type    = OperandType::Indirect,
                                 .src            = Reg16Name::HL,
                                 .dst            = Reg8Name::A,
                                 .src_addr       = 0x89AB,
                                 .initial_a      = 0x0F,
                                 .carry_in       = true,
                                 .src_value      = uint8_t{0x0F},
                                 .expected_value = uint8_t{0xFF},
                                 .expect_n       = true,
                                 .expect_h       = true,
                                 .expect_c       = true,
                                 .name           = "UnderflowCarryIn",
                             },
                             InstrParam{
                                 .opcode         = Opcode::SBC_A_AT_HL,
                                 .src_op_type    = OperandType::Indirect,
                                 .src            = Reg16Name::HL,
                                 .dst            = Reg8Name::A,
                                 .src_addr       = 0xCDEF,
                                 .initial_a      = 0x10,
                                 .carry_in       = false,
                                 .src_value      = uint8_t{0x11},
                                 .expected_value = uint8_t{0xFF},
                                 .expect_n       = true,
                                 .expect_h       = true,
                                 .expect_c       = true,
                                 .name           = "HalfCarryUnderflowNoCarryIn",
                             },
                             InstrParam{
                                 .opcode         = Opcode::SBC_A_AT_HL,
                                 .src_op_type    = OperandType::Indirect,
                                 .src            = Reg16Name::HL,
                                 .dst            = Reg8Name::A,
                                 .src_addr       = 0xCDEF,
                                 .initial_a      = 0x10,
                                 .carry_in       = true,
                                 .src_value      = uint8_t{0x10},
                                 .expected_value = uint8_t{0xFF},
                                 .expect_n       = true,
                                 .expect_h       = true,
                                 .expect_c       = true,
                                 .name           = "HalfCarryUnderflowCarryIn",
                             }),
                         boyboy::test::cpu::param_name<InstrParam>);

// SBC A, n8
INSTANTIATE_TEST_SUITE_P(SubInstructions,
                         SbcImmTest,
                         ::testing::Values(
                             InstrParam{
                                 .opcode         = Opcode::SBC_A_N8,
                                 .src_op_type    = OperandType::Immediate,
                                 .dst            = Reg8Name::A,
                                 .initial_a      = 0x02,
                                 .carry_in       = false,
                                 .src_value      = uint8_t{0x01},
                                 .expected_value = uint8_t{0x01},
                                 .expect_n       = true,
                                 .name           = "NormalNoCarryIn",
                             },
                             InstrParam{
                                 .opcode         = Opcode::SBC_A_N8,
                                 .src_op_type    = OperandType::Immediate,
                                 .dst            = Reg8Name::A,
                                 .initial_a      = 0x03,
                                 .carry_in       = true,
                                 .src_value      = uint8_t{0x01},
                                 .expected_value = uint8_t{0x01},
                                 .expect_n       = true,
                                 .name           = "NormalCarryIn",
                             },
                             InstrParam{
                                 .opcode         = Opcode::SBC_A_N8,
                                 .src_op_type    = OperandType::Immediate,
                                 .dst            = Reg8Name::A,
                                 .initial_a      = 0x01,
                                 .carry_in       = false,
                                 .src_value      = uint8_t{0x01},
                                 .expected_value = uint8_t{0x00},
                                 .expect_z       = true,
                                 .expect_n       = true,
                                 .name           = "ZeroNoCarryIn",
                             },
                             InstrParam{
                                 .opcode         = Opcode::SBC_A_N8,
                                 .src_op_type    = OperandType::Immediate,
                                 .dst            = Reg8Name::A,
                                 .initial_a      = 0x02,
                                 .carry_in       = true,
                                 .src_value      = uint8_t{0x01},
                                 .expected_value = uint8_t{0x00},
                                 .expect_z       = true,
                                 .expect_n       = true,
                                 .name           = "ZeroCarryIn",
                             },
                             InstrParam{
                                 .opcode         = Opcode::SBC_A_N8,
                                 .src_op_type    = OperandType::Immediate,
                                 .dst            = Reg8Name::A,
                                 .initial_a      = 0x10,
                                 .carry_in       = false,
                                 .src_value      = uint8_t{0x01},
                                 .expected_value = uint8_t{0x0F},
                                 .expect_n       = true,
                                 .expect_h       = true,
                                 .name           = "HalfCarryNoCarryIn",
                             },
                             InstrParam{
                                 .opcode         = Opcode::SBC_A_N8,
                                 .src_op_type    = OperandType::Immediate,
                                 .dst            = Reg8Name::A,
                                 .initial_a      = 0x10,
                                 .carry_in       = true,
                                 .src_value      = uint8_t{0x01},
                                 .expected_value = uint8_t{0x0E},
                                 .expect_n       = true,
                                 .expect_h       = true,
                                 .name           = "HalfCarryCarryIn",
                             },
                             InstrParam{
                                 .opcode         = Opcode::SBC_A_N8,
                                 .src_op_type    = OperandType::Immediate,
                                 .dst            = Reg8Name::A,
                                 .initial_a      = 0x0F,
                                 .carry_in       = false,
                                 .src_value      = uint8_t{0x10},
                                 .expected_value = uint8_t{0xFF},
                                 .expect_n       = true,
                                 .expect_c       = true,
                                 .name           = "UnderflowNoCarryIn",
                             },
                             InstrParam{
                                 .opcode         = Opcode::SBC_A_N8,
                                 .src_op_type    = OperandType::Immediate,
                                 .dst            = Reg8Name::A,
                                 .initial_a      = 0x0F,
                                 .carry_in       = true,
                                 .src_value      = uint8_t{0x0F},
                                 .expected_value = uint8_t{0xFF},
                                 .expect_n       = true,
                                 .expect_h       = true,
                                 .expect_c       = true,
                                 .name           = "UnderflowCarryIn",
                             },
                             InstrParam{
                                 .opcode         = Opcode::SBC_A_N8,
                                 .src_op_type    = OperandType::Immediate,
                                 .dst            = Reg8Name::A,
                                 .initial_a      = 0x10,
                                 .carry_in       = false,
                                 .src_value      = uint8_t{0x11},
                                 .expected_value = uint8_t{0xFF},
                                 .expect_n       = true,
                                 .expect_h       = true,
                                 .expect_c       = true,
                                 .name           = "HalfCarryUnderflowNoCarryIn",
                             },
                             InstrParam{
                                 .opcode         = Opcode::SBC_A_N8,
                                 .src_op_type    = OperandType::Immediate,
                                 .dst            = Reg8Name::A,
                                 .initial_a      = 0x10,
                                 .carry_in       = true,
                                 .src_value      = uint8_t{0x10},
                                 .expected_value = uint8_t{0xFF},
                                 .expect_n       = true,
                                 .expect_h       = true,
                                 .expect_c       = true,
                                 .name           = "HalfCarryUnderflowCarryIn",
                             }),
                         boyboy::test::cpu::param_name<InstrParam>);
/**
 * @file rotate.cpp
 * @brief Unit tests for CPU CB-prefixed rotate instructions.
 *
 * RLC r8, RRC r8, RL r8, RR r8
 * RLC [HL], RRC [HL], RL [HL], RR [HL]
 *
 * @license GPLv3 (see LICENSE file)
 */

#include <gtest/gtest.h>

// Helpers
#include "helpers/cpu_fixtures.h"
#include "helpers/cpu_params.h"

using boyboy::cpu::CBOpcode;
using boyboy::cpu::Reg16Name;

using boyboy::test::cpu::FlagsParam;
using boyboy::test::cpu::InstrParam;
using boyboy::test::cpu::InstrTest;
using boyboy::test::cpu::OperandType;

// -----------------------------
// Test types
// -----------------------------
using RlcR8Test = InstrTest<InstrParam>;
using RrcR8Test = InstrTest<InstrParam>;
using RlR8Test  = InstrTest<InstrParam>;
using RrR8Test  = InstrTest<InstrParam>;
using RlcHLTest = InstrTest<InstrParam>;
using RrcHLTest = InstrTest<InstrParam>;
using RlHLTest  = InstrTest<InstrParam>;
using RrHLTest  = InstrTest<InstrParam>;

// -----------------------------
// Test definitions
// -----------------------------
TEST_P(RlcR8Test, Works) { run_test(); }
TEST_P(RrcR8Test, Works) { run_test(); }
TEST_P(RlR8Test, Works) { run_test(); }
TEST_P(RrR8Test, Works) { run_test(); }
TEST_P(RlcHLTest, Works) { run_test(); }
TEST_P(RrcHLTest, Works) { run_test(); }
TEST_P(RlHLTest, Works) { run_test(); }
TEST_P(RrHLTest, Works) { run_test(); }

// -----------------------------
// Parameter instantiations
// -----------------------------
// RLC r8
INSTANTIATE_TEST_SUITE_P(CBRotateInstructions,
                         RlcR8Test,
                         ::testing::Values(
                             InstrParam{
                                 .opcode         = CBOpcode::RLC_A,
                                 .src            = boyboy::cpu::Reg8Name::A,
                                 .dst            = boyboy::cpu::Reg8Name::A,
                                 .src_value      = uint8_t{0b00000000},
                                 .expected_value = uint8_t{0b00000000},
                                 .expect_z       = true,
                                 .expect_c       = false,
                                 .name           = "RLC_A_Zero",
                             },
                             InstrParam{
                                 .opcode         = CBOpcode::RLC_B,
                                 .src            = boyboy::cpu::Reg8Name::B,
                                 .dst            = boyboy::cpu::Reg8Name::B,
                                 .src_value      = uint8_t{0b01001100},
                                 .expected_value = uint8_t{0b10011000},
                                 .expect_z       = false,
                                 .expect_c       = false,
                                 .name           = "RLC_B_NoZero",
                             },
                             InstrParam{
                                 .opcode         = CBOpcode::RLC_C,
                                 .src            = boyboy::cpu::Reg8Name::C,
                                 .dst            = boyboy::cpu::Reg8Name::C,
                                 .src_value      = uint8_t{0b10011001},
                                 .expected_value = uint8_t{0b00110011},
                                 .expect_z       = false,
                                 .expect_c       = true,
                                 .name           = "RLC_C_Carry",
                             },
                             InstrParam{
                                 .opcode         = CBOpcode::RLC_D,
                                 .src            = boyboy::cpu::Reg8Name::D,
                                 .dst            = boyboy::cpu::Reg8Name::D,
                                 .src_value      = uint8_t{0b11111111},
                                 .expected_value = uint8_t{0b11111111},
                                 .expect_z       = false,
                                 .expect_c       = true,
                                 .name           = "RLC_D_AllBitsSet",
                             },
                             InstrParam{
                                 .opcode         = CBOpcode::RLC_E,
                                 .src            = boyboy::cpu::Reg8Name::E,
                                 .dst            = boyboy::cpu::Reg8Name::E,
                                 .src_value      = uint8_t{0b01111111},
                                 .expected_value = uint8_t{0b11111110},
                                 .expect_z       = false,
                                 .expect_c       = false,
                                 .name           = "RLC_E_Positive",
                             },
                             InstrParam{
                                 .opcode         = CBOpcode::RLC_H,
                                 .src            = boyboy::cpu::Reg8Name::H,
                                 .dst            = boyboy::cpu::Reg8Name::H,
                                 .src_value      = uint8_t{0b11111110},
                                 .expected_value = uint8_t{0b11111101},
                                 .expect_z       = false,
                                 .expect_c       = true,
                                 .name           = "RLC_H_Negative",
                             },
                             InstrParam{
                                 .opcode         = CBOpcode::RLC_L,
                                 .src            = boyboy::cpu::Reg8Name::L,
                                 .dst            = boyboy::cpu::Reg8Name::L,
                                 .src_value      = uint8_t{0b00000001},
                                 .expected_value = uint8_t{0b00000010},
                                 .expect_z       = false,
                                 .expect_c       = false,
                                 .name           = "RLC_L_SingleBit",
                             }),
                         boyboy::test::cpu::param_name<InstrParam>);

// RRC r8
INSTANTIATE_TEST_SUITE_P(CBRotateInstructions,
                         RrcR8Test,
                         ::testing::Values(
                             InstrParam{
                                 .opcode         = CBOpcode::RRC_A,
                                 .src            = boyboy::cpu::Reg8Name::A,
                                 .dst            = boyboy::cpu::Reg8Name::A,
                                 .src_value      = uint8_t{0b00000000},
                                 .expected_value = uint8_t{0b00000000},
                                 .expect_z       = true,
                                 .expect_c       = false,
                                 .name           = "RRC_A_Zero",
                             },
                             InstrParam{
                                 .opcode         = CBOpcode::RRC_B,
                                 .src            = boyboy::cpu::Reg8Name::B,
                                 .dst            = boyboy::cpu::Reg8Name::B,
                                 .src_value      = uint8_t{0b01001100},
                                 .expected_value = uint8_t{0b00100110},
                                 .expect_z       = false,
                                 .expect_c       = false,
                                 .name           = "RRC_B_NoZero",
                             },
                             InstrParam{
                                 .opcode         = CBOpcode::RRC_C,
                                 .src            = boyboy::cpu::Reg8Name::C,
                                 .dst            = boyboy::cpu::Reg8Name::C,
                                 .src_value      = uint8_t{0b00000001},
                                 .expected_value = uint8_t{0b10000000},
                                 .expect_z       = false,
                                 .expect_c       = true,
                                 .name           = "RRC_C_Carry",
                             },
                             InstrParam{
                                 .opcode         = CBOpcode::RRC_D,
                                 .src            = boyboy::cpu::Reg8Name::D,
                                 .dst            = boyboy::cpu::Reg8Name::D,
                                 .src_value      = uint8_t{0b11111111},
                                 .expected_value = uint8_t{0b11111111},
                                 .expect_z       = false,
                                 .expect_c       = true,
                                 .name           = "RRC_D_AllBitsSet",
                             },
                             InstrParam{
                                 .opcode         = CBOpcode::RRC_E,
                                 .src            = boyboy::cpu::Reg8Name::E,
                                 .dst            = boyboy::cpu::Reg8Name::E,
                                 .src_value      = uint8_t{0b10000000},
                                 .expected_value = uint8_t{0b01000000},
                                 .expect_z       = false,
                                 .expect_c       = false,
                                 .name           = "RRC_E_SingleBit",
                             },
                             InstrParam{
                                 .opcode         = CBOpcode::RRC_H,
                                 .src            = boyboy::cpu::Reg8Name::H,
                                 .dst            = boyboy::cpu::Reg8Name::H,
                                 .src_value      = uint8_t{0b11111110},
                                 .expected_value = uint8_t{0b01111111},
                                 .expect_z       = false,
                                 .expect_c       = false,
                                 .name           = "RRC_H_Positive",
                             },
                             InstrParam{
                                 .opcode         = CBOpcode::RRC_L,
                                 .src            = boyboy::cpu::Reg8Name::L,
                                 .dst            = boyboy::cpu::Reg8Name::L,
                                 .src_value      = uint8_t{0b10000001},
                                 .expected_value = uint8_t{0b11000000},
                                 .expect_z       = false,
                                 .expect_c       = true,
                                 .name           = "RRC_L_Negative",
                             }),
                         boyboy::test::cpu::param_name<InstrParam>);

// RL r8
INSTANTIATE_TEST_SUITE_P(CBRotateInstructions,
                         RlR8Test,
                         ::testing::Values(
                             InstrParam{
                                 .opcode         = CBOpcode::RL_A,
                                 .src            = boyboy::cpu::Reg8Name::A,
                                 .dst            = boyboy::cpu::Reg8Name::A,
                                 .initial_flags  = FlagsParam{.c = false},
                                 .src_value      = uint8_t{0b00000000},
                                 .expected_value = uint8_t{0b00000000},
                                 .expect_z       = true,
                                 .expect_c       = false,
                                 .name           = "RL_A_Zero_NoCarry",
                             },
                             InstrParam{
                                 .opcode         = CBOpcode::RL_A,
                                 .src            = boyboy::cpu::Reg8Name::A,
                                 .dst            = boyboy::cpu::Reg8Name::A,
                                 .initial_flags  = FlagsParam{.c = true},
                                 .src_value      = uint8_t{0b00000000},
                                 .expected_value = uint8_t{0b00000001},
                                 .expect_z       = false,
                                 .expect_c       = false,
                                 .name           = "RL_A_NoZero_Carry",
                             },
                             InstrParam{
                                 .opcode         = CBOpcode::RL_B,
                                 .src            = boyboy::cpu::Reg8Name::B,
                                 .dst            = boyboy::cpu::Reg8Name::B,
                                 .initial_flags  = FlagsParam{.c = false},
                                 .src_value      = uint8_t{0b01001100},
                                 .expected_value = uint8_t{0b10011000},
                                 .expect_z       = false,
                                 .expect_c       = false,
                                 .name           = "RL_B_NoZero_NoCarry",
                             },
                             InstrParam{
                                 .opcode         = CBOpcode::RL_B,
                                 .src            = boyboy::cpu::Reg8Name::B,
                                 .dst            = boyboy::cpu::Reg8Name::B,
                                 .initial_flags  = FlagsParam{.c = true},
                                 .src_value      = uint8_t{0b01001100},
                                 .expected_value = uint8_t{0b10011001},
                                 .expect_z       = false,
                                 .expect_c       = false,
                                 .name           = "RL_B_NoZero_Carry",
                             },
                             InstrParam{
                                 .opcode         = CBOpcode::RL_C,
                                 .src            = boyboy::cpu::Reg8Name::C,
                                 .dst            = boyboy::cpu::Reg8Name::C,
                                 .initial_flags  = FlagsParam{.c = false},
                                 .src_value      = uint8_t{0b10011001},
                                 .expected_value = uint8_t{0b00110010},
                                 .expect_z       = false,
                                 .expect_c       = true,
                                 .name           = "RL_C_Carry_NoCarry",
                             },
                             InstrParam{
                                 .opcode         = CBOpcode::RL_C,
                                 .src            = boyboy::cpu::Reg8Name::C,
                                 .dst            = boyboy::cpu::Reg8Name::C,
                                 .initial_flags  = FlagsParam{.c = true},
                                 .src_value      = uint8_t{0b10011001},
                                 .expected_value = uint8_t{0b00110011},
                                 .expect_z       = false,
                                 .expect_c       = true,
                                 .name           = "RL_C_Carry_Carry",
                             },
                             InstrParam{
                                 .opcode         = CBOpcode::RL_D,
                                 .src            = boyboy::cpu::Reg8Name::D,
                                 .dst            = boyboy::cpu::Reg8Name::D,
                                 .initial_flags  = FlagsParam{.c = false},
                                 .src_value      = uint8_t{0b11111111},
                                 .expected_value = uint8_t{0b11111110},
                                 .expect_z       = false,
                                 .expect_c       = true,
                                 .name           = "RL_D_AllBitsSet_NoCarry",
                             },
                             InstrParam{
                                 .opcode         = CBOpcode::RL_D,
                                 .src            = boyboy::cpu::Reg8Name::D,
                                 .dst            = boyboy::cpu::Reg8Name::D,
                                 .initial_flags  = FlagsParam{.c = true},
                                 .src_value      = uint8_t{0b11111111},
                                 .expected_value = uint8_t{0b11111111},
                                 .expect_z       = false,
                                 .expect_c       = true,
                                 .name           = "RL_D_AllBitsSet_Carry",
                             },
                             InstrParam{
                                 .opcode         = CBOpcode::RL_E,
                                 .src            = boyboy::cpu::Reg8Name::E,
                                 .dst            = boyboy::cpu::Reg8Name::E,
                                 .initial_flags  = FlagsParam{.c = false},
                                 .src_value      = uint8_t{0b01111111},
                                 .expected_value = uint8_t{0b11111110},
                                 .expect_z       = false,
                                 .expect_c       = false,
                                 .name           = "RL_E_Positive_NoCarry",
                             },
                             InstrParam{
                                 .opcode         = CBOpcode::RL_E,
                                 .src            = boyboy::cpu::Reg8Name::E,
                                 .dst            = boyboy::cpu::Reg8Name::E,
                                 .initial_flags  = FlagsParam{.c = true},
                                 .src_value      = uint8_t{0b01111111},
                                 .expected_value = uint8_t{0b11111111},
                                 .expect_z       = false,
                                 .expect_c       = false,
                                 .name           = "RL_E_Positive_Carry",
                             },
                             InstrParam{
                                 .opcode         = CBOpcode::RL_H,
                                 .src            = boyboy::cpu::Reg8Name::H,
                                 .dst            = boyboy::cpu::Reg8Name::H,
                                 .initial_flags  = FlagsParam{.c = false},
                                 .src_value      = uint8_t{0b11111110},
                                 .expected_value = uint8_t{0b11111100},
                                 .expect_z       = false,
                                 .expect_c       = true,
                                 .name           = "RL_H_Negative_NoCarry",
                             },
                             InstrParam{
                                 .opcode         = CBOpcode::RL_H,
                                 .src            = boyboy::cpu::Reg8Name::H,
                                 .dst            = boyboy::cpu::Reg8Name::H,
                                 .initial_flags  = FlagsParam{.c = true},
                                 .src_value      = uint8_t{0b11111110},
                                 .expected_value = uint8_t{0b11111101},
                                 .expect_z       = false,
                                 .expect_c       = true,
                                 .name           = "RL_H_Negative_Carry",
                             },
                             InstrParam{
                                 .opcode         = CBOpcode::RL_L,
                                 .src            = boyboy::cpu::Reg8Name::L,
                                 .dst            = boyboy::cpu::Reg8Name::L,
                                 .initial_flags  = FlagsParam{.c = false},
                                 .src_value      = uint8_t{0b00000001},
                                 .expected_value = uint8_t{0b00000010},
                                 .expect_z       = false,
                                 .expect_c       = false,
                                 .name           = "RL_L_SingleBit_NoCarry",
                             },
                             InstrParam{
                                 .opcode         = CBOpcode::RL_L,
                                 .src            = boyboy::cpu::Reg8Name::L,
                                 .dst            = boyboy::cpu::Reg8Name::L,
                                 .initial_flags  = FlagsParam{.c = true},
                                 .src_value      = uint8_t{0b00000001},
                                 .expected_value = uint8_t{0b00000011},
                                 .expect_z       = false,
                                 .expect_c       = false,
                                 .name           = "RL_L_SingleBit_Carry",
                             }),
                         boyboy::test::cpu::param_name<InstrParam>);

// RR r8
INSTANTIATE_TEST_SUITE_P(CBRotateInstructions,
                         RrR8Test,
                         ::testing::Values(
                             InstrParam{
                                 .opcode         = CBOpcode::RR_A,
                                 .src            = boyboy::cpu::Reg8Name::A,
                                 .dst            = boyboy::cpu::Reg8Name::A,
                                 .initial_flags  = FlagsParam{.c = false},
                                 .src_value      = uint8_t{0b00000000},
                                 .expected_value = uint8_t{0b00000000},
                                 .expect_z       = true,
                                 .expect_c       = false,
                                 .name           = "RR_A_Zero_NoCarry",
                             },
                             InstrParam{
                                 .opcode         = CBOpcode::RR_A,
                                 .src            = boyboy::cpu::Reg8Name::A,
                                 .dst            = boyboy::cpu::Reg8Name::A,
                                 .initial_flags  = FlagsParam{.c = true},
                                 .src_value      = uint8_t{0b00000000},
                                 .expected_value = uint8_t{0b10000000},
                                 .expect_z       = false,
                                 .expect_c       = false,
                                 .name           = "RR_A_Zero_Carry",
                             },
                             InstrParam{
                                 .opcode         = CBOpcode::RR_B,
                                 .src            = boyboy::cpu::Reg8Name::B,
                                 .dst            = boyboy::cpu::Reg8Name::B,
                                 .initial_flags  = FlagsParam{.c = false},
                                 .src_value      = uint8_t{0b01001100},
                                 .expected_value = uint8_t{0b00100110},
                                 .expect_z       = false,
                                 .expect_c       = false,
                                 .name           = "RR_B_NoZero_NoCarry",
                             },
                             InstrParam{
                                 .opcode         = CBOpcode::RR_B,
                                 .src            = boyboy::cpu::Reg8Name::B,
                                 .dst            = boyboy::cpu::Reg8Name::B,
                                 .initial_flags  = FlagsParam{.c = true},
                                 .src_value      = uint8_t{0b01001100},
                                 .expected_value = uint8_t{0b10100110},
                                 .expect_z       = false,
                                 .expect_c       = false,
                                 .name           = "RR_B_NoZero_Carry",
                             },
                             InstrParam{
                                 .opcode         = CBOpcode::RR_C,
                                 .src            = boyboy::cpu::Reg8Name::C,
                                 .dst            = boyboy::cpu::Reg8Name::C,
                                 .initial_flags  = FlagsParam{.c = false},
                                 .src_value      = uint8_t{0b10011001},
                                 .expected_value = uint8_t{0b01001100},
                                 .expect_z       = false,
                                 .expect_c       = true,
                                 .name           = "RR_C_Carry_NoCarry",
                             },
                             InstrParam{
                                 .opcode         = CBOpcode::RR_C,
                                 .src            = boyboy::cpu::Reg8Name::C,
                                 .dst            = boyboy::cpu::Reg8Name::C,
                                 .initial_flags  = FlagsParam{.c = true},
                                 .src_value      = uint8_t{0b10011001},
                                 .expected_value = uint8_t{0b11001100},
                                 .expect_z       = false,
                                 .expect_c       = true,
                                 .name           = "RR_C_Carry_Carry",
                             },
                             InstrParam{
                                 .opcode         = CBOpcode::RR_D,
                                 .src            = boyboy::cpu::Reg8Name::D,
                                 .dst            = boyboy::cpu::Reg8Name::D,
                                 .initial_flags  = FlagsParam{.c = false},
                                 .src_value      = uint8_t{0b11111111},
                                 .expected_value = uint8_t{0b01111111},
                                 .expect_z       = false,
                                 .expect_c       = true,
                                 .name           = "RR_D_AllBitsSet_NoCarry",
                             },
                             InstrParam{
                                 .opcode         = CBOpcode::RR_D,
                                 .src            = boyboy::cpu::Reg8Name::D,
                                 .dst            = boyboy::cpu::Reg8Name::D,
                                 .initial_flags  = FlagsParam{.c = true},
                                 .src_value      = uint8_t{0b11111111},
                                 .expected_value = uint8_t{0b11111111},
                                 .expect_z       = false,
                                 .expect_c       = true,
                                 .name           = "RR_D_AllBitsSet_Carry",
                             },
                             InstrParam{
                                 .opcode         = CBOpcode::RR_E,
                                 .src            = boyboy::cpu::Reg8Name::E,
                                 .dst            = boyboy::cpu::Reg8Name::E,
                                 .initial_flags  = FlagsParam{.c = false},
                                 .src_value      = uint8_t{0b01111111},
                                 .expected_value = uint8_t{0b00111111},
                                 .expect_z       = false,
                                 .expect_c       = true,
                                 .name           = "RR_E_Positive_NoCarry",
                             },
                             InstrParam{
                                 .opcode         = CBOpcode::RR_E,
                                 .src            = boyboy::cpu::Reg8Name::E,
                                 .dst            = boyboy::cpu::Reg8Name::E,
                                 .initial_flags  = FlagsParam{.c = true},
                                 .src_value      = uint8_t{0b01111111},
                                 .expected_value = uint8_t{0b10111111},
                                 .expect_z       = false,
                                 .expect_c       = true,
                                 .name           = "RR_E_Positive_Carry",
                             },
                             InstrParam{
                                 .opcode         = CBOpcode::RR_H,
                                 .src            = boyboy::cpu::Reg8Name::H,
                                 .dst            = boyboy::cpu::Reg8Name::H,
                                 .initial_flags  = FlagsParam{.c = false},
                                 .src_value      = uint8_t{0b11111110},
                                 .expected_value = uint8_t{0b01111111},
                                 .expect_z       = false,
                                 .expect_c       = false,
                                 .name           = "RR_H_Negative_NoCarry",
                             },
                             InstrParam{
                                 .opcode         = CBOpcode::RR_H,
                                 .src            = boyboy::cpu::Reg8Name::H,
                                 .dst            = boyboy::cpu::Reg8Name::H,
                                 .initial_flags  = FlagsParam{.c = true},
                                 .src_value      = uint8_t{0b11111110},
                                 .expected_value = uint8_t{0b11111111},
                                 .expect_z       = false,
                                 .expect_c       = false,
                                 .name           = "RR_H_Negative_Carry",
                             },
                             InstrParam{
                                 .opcode         = CBOpcode::RR_L,
                                 .src            = boyboy::cpu::Reg8Name::L,
                                 .dst            = boyboy::cpu::Reg8Name::L,
                                 .initial_flags  = FlagsParam{.c = false},
                                 .src_value      = uint8_t{0b00000001},
                                 .expected_value = uint8_t{0b00000000},
                                 .expect_z       = true,
                                 .expect_c       = true,
                                 .name           = "RR_L_SingleBit_NoCarry",
                             },
                             InstrParam{
                                 .opcode         = CBOpcode::RR_L,
                                 .src            = boyboy::cpu::Reg8Name::L,
                                 .dst            = boyboy::cpu::Reg8Name::L,
                                 .initial_flags  = FlagsParam{.c = true},
                                 .src_value      = uint8_t{0b00000001},
                                 .expected_value = uint8_t{0b10000000},
                                 .expect_z       = false,
                                 .expect_c       = true,
                                 .name           = "RR_L_SingleBit_Carry",
                             }),
                         boyboy::test::cpu::param_name<InstrParam>);

// RLC [HL]
INSTANTIATE_TEST_SUITE_P(CBRotateInstructions,
                         RlcHLTest,
                         ::testing::Values(
                             InstrParam{
                                 .opcode         = CBOpcode::RLC_AT_HL,
                                 .src_op_type    = OperandType::Indirect,
                                 .dst_op_type    = OperandType::Indirect,
                                 .src            = Reg16Name::HL,
                                 .dst            = Reg16Name::HL,
                                 .src_addr       = uint16_t{0xC000},
                                 .src_value      = uint8_t{0b00000000},
                                 .expected_value = uint8_t{0b00000000},
                                 .expect_z       = true,
                                 .expect_c       = false,
                                 .name           = "RLC_HL_Zero",
                             },
                             InstrParam{
                                 .opcode         = CBOpcode::RLC_AT_HL,
                                 .src_op_type    = OperandType::Indirect,
                                 .dst_op_type    = OperandType::Indirect,
                                 .src            = Reg16Name::HL,
                                 .dst            = Reg16Name::HL,
                                 .src_addr       = uint16_t{0xC000},
                                 .src_value      = uint8_t{0b01001100},
                                 .expected_value = uint8_t{0b10011000},
                                 .expect_z       = false,
                                 .expect_c       = false,
                                 .name           = "RLC_HL_Positive",
                             },
                             InstrParam{
                                 .opcode         = CBOpcode::RLC_AT_HL,
                                 .src_op_type    = OperandType::Indirect,
                                 .dst_op_type    = OperandType::Indirect,
                                 .src            = Reg16Name::HL,
                                 .dst            = Reg16Name::HL,
                                 .src_addr       = uint16_t{0xC000},
                                 .src_value      = uint8_t{0b10011001},
                                 .expected_value = uint8_t{0b00110011},
                                 .expect_z       = false,
                                 .expect_c       = true,
                                 .name           = "RLC_HL_Negative",
                             },
                             InstrParam{
                                 .opcode         = CBOpcode::RLC_AT_HL,
                                 .src_op_type    = OperandType::Indirect,
                                 .dst_op_type    = OperandType::Indirect,
                                 .src            = Reg16Name::HL,
                                 .dst            = Reg16Name::HL,
                                 .src_addr       = uint16_t{0xC000},
                                 .src_value      = uint8_t{0b11111111},
                                 .expected_value = uint8_t{0b11111111},
                                 .expect_z       = false,
                                 .expect_c       = true,
                                 .name           = "RLC_HL_AllBitsSet",
                             }),
                         boyboy::test::cpu::param_name<InstrParam>);

// RRC [HL]
INSTANTIATE_TEST_SUITE_P(CBRotateInstructions,
                         RrcHLTest,
                         ::testing::Values(
                             InstrParam{
                                 .opcode         = CBOpcode::RRC_AT_HL,
                                 .src_op_type    = OperandType::Indirect,
                                 .dst_op_type    = OperandType::Indirect,
                                 .src            = Reg16Name::HL,
                                 .dst            = Reg16Name::HL,
                                 .src_addr       = uint16_t{0xC000},
                                 .src_value      = uint8_t{0b00000000},
                                 .expected_value = uint8_t{0b00000000},
                                 .expect_z       = true,
                                 .expect_c       = false,
                                 .name           = "RRC_HL_Zero",
                             },
                             InstrParam{
                                 .opcode         = CBOpcode::RRC_AT_HL,
                                 .src_op_type    = OperandType::Indirect,
                                 .dst_op_type    = OperandType::Indirect,
                                 .src            = Reg16Name::HL,
                                 .dst            = Reg16Name::HL,
                                 .src_addr       = uint16_t{0xC000},
                                 .src_value      = uint8_t{0b01001100},
                                 .expected_value = uint8_t{0b00100110},
                                 .expect_z       = false,
                                 .expect_c       = false,
                                 .name           = "RRC_HL_Positive",
                             },
                             InstrParam{
                                 .opcode         = CBOpcode::RRC_AT_HL,
                                 .src_op_type    = OperandType::Indirect,
                                 .dst_op_type    = OperandType::Indirect,
                                 .src            = Reg16Name::HL,
                                 .dst            = Reg16Name::HL,
                                 .src_addr       = uint16_t{0xC000},
                                 .src_value      = uint8_t{0b10011001},
                                 .expected_value = uint8_t{0b11001100},
                                 .expect_z       = false,
                                 .expect_c       = true,
                                 .name           = "RRC_HL_Negative",
                             },
                             InstrParam{
                                 .opcode         = CBOpcode::RRC_AT_HL,
                                 .src_op_type    = OperandType::Indirect,
                                 .dst_op_type    = OperandType::Indirect,
                                 .src            = Reg16Name::HL,
                                 .dst            = Reg16Name::HL,
                                 .src_addr       = uint16_t{0xC000},
                                 .src_value      = uint8_t{0b11111111},
                                 .expected_value = uint8_t{0b11111111},
                                 .expect_z       = false,
                                 .expect_c       = true,
                                 .name           = "RRC_HL_AllBitsSet",
                             }),
                         boyboy::test::cpu::param_name<InstrParam>);

// RL [HL]
INSTANTIATE_TEST_SUITE_P(CBRotateInstructions,
                         RlHLTest,
                         ::testing::Values(
                             InstrParam{
                                 .opcode         = CBOpcode::RL_AT_HL,
                                 .src_op_type    = OperandType::Indirect,
                                 .dst_op_type    = OperandType::Indirect,
                                 .src            = Reg16Name::HL,
                                 .dst            = Reg16Name::HL,
                                 .src_addr       = uint16_t{0xC000},
                                 .initial_flags  = FlagsParam{.c = false},
                                 .src_value      = uint8_t{0b00000000},
                                 .expected_value = uint8_t{0b00000000},
                                 .expect_z       = true,
                                 .expect_c       = false,
                                 .name           = "RL_HL_Zero_NoCarry",
                             },
                             InstrParam{
                                 .opcode         = CBOpcode::RL_AT_HL,
                                 .src_op_type    = OperandType::Indirect,
                                 .dst_op_type    = OperandType::Indirect,
                                 .src            = Reg16Name::HL,
                                 .dst            = Reg16Name::HL,
                                 .src_addr       = uint16_t{0xC000},
                                 .initial_flags  = FlagsParam{.c = true},
                                 .src_value      = uint8_t{0b00000000},
                                 .expected_value = uint8_t{0b00000001},
                                 .expect_z       = false,
                                 .expect_c       = false,
                                 .name           = "RL_HL_Zero_Carry",
                             },
                             InstrParam{
                                 .opcode         = CBOpcode::RL_AT_HL,
                                 .src_op_type    = OperandType::Indirect,
                                 .dst_op_type    = OperandType::Indirect,
                                 .src            = Reg16Name::HL,
                                 .dst            = Reg16Name::HL,
                                 .src_addr       = uint16_t{0xC000},
                                 .initial_flags  = FlagsParam{.c = false},
                                 .src_value      = uint8_t{0b01001100},
                                 .expected_value = uint8_t{0b10011000},
                                 .expect_z       = false,
                                 .expect_c       = false,
                                 .name           = "RL_HL_Positive_NoCarry",
                             },
                             InstrParam{
                                 .opcode         = CBOpcode::RL_AT_HL,
                                 .src_op_type    = OperandType::Indirect,
                                 .dst_op_type    = OperandType::Indirect,
                                 .src            = Reg16Name::HL,
                                 .dst            = Reg16Name::HL,
                                 .src_addr       = uint16_t{0xC000},
                                 .initial_flags  = FlagsParam{.c = true},
                                 .src_value      = uint8_t{0b01001100},
                                 .expected_value = uint8_t{0b10011001},
                                 .expect_z       = false,
                                 .expect_c       = false,
                                 .name           = "RL_HL_Positive_Carry",
                             },
                             InstrParam{
                                 .opcode         = CBOpcode::RL_AT_HL,
                                 .src_op_type    = OperandType::Indirect,
                                 .dst_op_type    = OperandType::Indirect,
                                 .src            = Reg16Name::HL,
                                 .dst            = Reg16Name::HL,
                                 .src_addr       = uint16_t{0xC000},
                                 .initial_flags  = FlagsParam{.c = false},
                                 .src_value      = uint8_t{0b10011001},
                                 .expected_value = uint8_t{0b00110010},
                                 .expect_z       = false,
                                 .expect_c       = true,
                                 .name           = "RL_HL_Negative_NoCarry",
                             },
                             InstrParam{
                                 .opcode         = CBOpcode::RL_AT_HL,
                                 .src_op_type    = OperandType::Indirect,
                                 .dst_op_type    = OperandType::Indirect,
                                 .src            = Reg16Name::HL,
                                 .dst            = Reg16Name::HL,
                                 .src_addr       = uint16_t{0xC000},
                                 .initial_flags  = FlagsParam{.c = true},
                                 .src_value      = uint8_t{0b10011001},
                                 .expected_value = uint8_t{0b00110011},
                                 .expect_z       = false,
                                 .expect_c       = true,
                                 .name           = "RL_HL_Negative_Carry",
                             },
                             InstrParam{
                                 .opcode         = CBOpcode::RL_AT_HL,
                                 .src_op_type    = OperandType::Indirect,
                                 .dst_op_type    = OperandType::Indirect,
                                 .src            = Reg16Name::HL,
                                 .dst            = Reg16Name::HL,
                                 .src_addr       = uint16_t{0xC000},
                                 .initial_flags  = FlagsParam{.c = false},
                                 .src_value      = uint8_t{0b11111111},
                                 .expected_value = uint8_t{0b11111110},
                                 .expect_z       = false,
                                 .expect_c       = true,
                                 .name           = "RL_HL_AllBitsSet_NoCarry",
                             },
                             InstrParam{
                                 .opcode         = CBOpcode::RL_AT_HL,
                                 .src_op_type    = OperandType::Indirect,
                                 .dst_op_type    = OperandType::Indirect,
                                 .src            = Reg16Name::HL,
                                 .dst            = Reg16Name::HL,
                                 .src_addr       = uint16_t{0xC000},
                                 .initial_flags  = FlagsParam{.c = true},
                                 .src_value      = uint8_t{0b11111111},
                                 .expected_value = uint8_t{0b11111111},
                                 .expect_z       = false,
                                 .expect_c       = true,
                                 .name           = "RL_HL_AllBitsSet_Carry",
                             }),
                         boyboy::test::cpu::param_name<InstrParam>);

// RR [HL]
INSTANTIATE_TEST_SUITE_P(CBRotateInstructions,
                         RrHLTest,
                         ::testing::Values(
                             InstrParam{
                                 .opcode         = CBOpcode::RR_AT_HL,
                                 .src_op_type    = OperandType::Indirect,
                                 .dst_op_type    = OperandType::Indirect,
                                 .src            = Reg16Name::HL,
                                 .dst            = Reg16Name::HL,
                                 .src_addr       = uint16_t{0xC000},
                                 .initial_flags  = FlagsParam{.c = false},
                                 .src_value      = uint8_t{0b00000000},
                                 .expected_value = uint8_t{0b00000000},
                                 .expect_z       = true,
                                 .expect_c       = false,
                                 .name           = "RR_HL_Zero_NoCarry",
                             },
                             InstrParam{
                                 .opcode         = CBOpcode::RR_AT_HL,
                                 .src_op_type    = OperandType::Indirect,
                                 .dst_op_type    = OperandType::Indirect,
                                 .src            = Reg16Name::HL,
                                 .dst            = Reg16Name::HL,
                                 .src_addr       = uint16_t{0xC000},
                                 .initial_flags  = FlagsParam{.c = true},
                                 .src_value      = uint8_t{0b00000000},
                                 .expected_value = uint8_t{0b10000000},
                                 .expect_z       = false,
                                 .expect_c       = false,
                                 .name           = "RR_HL_Zero_Carry",
                             },
                             InstrParam{
                                 .opcode         = CBOpcode::RR_AT_HL,
                                 .src_op_type    = OperandType::Indirect,
                                 .dst_op_type    = OperandType::Indirect,
                                 .src            = Reg16Name::HL,
                                 .dst            = Reg16Name::HL,
                                 .src_addr       = uint16_t{0xC000},
                                 .initial_flags  = FlagsParam{.c = false},
                                 .src_value      = uint8_t{0b01001100},
                                 .expected_value = uint8_t{0b00100110},
                                 .expect_z       = false,
                                 .expect_c       = false,
                                 .name           = "RR_HL_Positive_NoCarry",
                             },
                             InstrParam{
                                 .opcode         = CBOpcode::RR_AT_HL,
                                 .src_op_type    = OperandType::Indirect,
                                 .dst_op_type    = OperandType::Indirect,
                                 .src            = Reg16Name::HL,
                                 .dst            = Reg16Name::HL,
                                 .src_addr       = uint16_t{0xC000},
                                 .initial_flags  = FlagsParam{.c = true},
                                 .src_value      = uint8_t{0b01001100},
                                 .expected_value = uint8_t{0b10100110},
                                 .expect_z       = false,
                                 .expect_c       = false,
                                 .name           = "RR_HL_Positive_Carry",
                             },
                             InstrParam{
                                 .opcode         = CBOpcode::RR_AT_HL,
                                 .src_op_type    = OperandType::Indirect,
                                 .dst_op_type    = OperandType::Indirect,
                                 .src            = Reg16Name::HL,
                                 .dst            = Reg16Name::HL,
                                 .src_addr       = uint16_t{0xC000},
                                 .initial_flags  = FlagsParam{.c = false},
                                 .src_value      = uint8_t{0b10011001},
                                 .expected_value = uint8_t{0b01001100},
                                 .expect_z       = false,
                                 .expect_c       = true,
                                 .name           = "RR_HL_Negative_NoCarry",
                             },
                             InstrParam{
                                 .opcode         = CBOpcode::RR_AT_HL,
                                 .src_op_type    = OperandType::Indirect,
                                 .dst_op_type    = OperandType::Indirect,
                                 .src            = Reg16Name::HL,
                                 .dst            = Reg16Name::HL,
                                 .src_addr       = uint16_t{0xC000},
                                 .initial_flags  = FlagsParam{.c = true},
                                 .src_value      = uint8_t{0b10011001},
                                 .expected_value = uint8_t{0b11001100},
                                 .expect_z       = false,
                                 .expect_c       = true,
                                 .name           = "RR_HL_Negative_Carry",
                             },
                             InstrParam{
                                 .opcode         = CBOpcode::RR_AT_HL,
                                 .src_op_type    = OperandType::Indirect,
                                 .dst_op_type    = OperandType::Indirect,
                                 .src            = Reg16Name::HL,
                                 .dst            = Reg16Name::HL,
                                 .src_addr       = uint16_t{0xC000},
                                 .initial_flags  = FlagsParam{.c = false},
                                 .src_value      = uint8_t{0b11111111},
                                 .expected_value = uint8_t{0b01111111},
                                 .expect_z       = false,
                                 .expect_c       = true,
                                 .name           = "RR_HL_AllBitsSet_NoCarry",
                             },
                             InstrParam{
                                 .opcode         = CBOpcode::RR_AT_HL,
                                 .src_op_type    = OperandType::Indirect,
                                 .dst_op_type    = OperandType::Indirect,
                                 .src            = Reg16Name::HL,
                                 .dst            = Reg16Name::HL,
                                 .src_addr       = uint16_t{0xC000},
                                 .initial_flags  = FlagsParam{.c = true},
                                 .src_value      = uint8_t{0b11111111},
                                 .expected_value = uint8_t{0b11111111},
                                 .expect_z       = false,
                                 .expect_c       = true,
                                 .name           = "RR_HL_AllBitsSet_Carry",
                             }),
                         boyboy::test::cpu::param_name<InstrParam>);
// ============================================================
// Opcode table for InstructionsTable (CB-prefixed)
// AUTO-GENERATED FILE â€” DO NOT EDIT MANUALLY
// Generated from Opcodes.json on 2025-09-07 00:34:22 UTC
// ============================================================

table[0x00] = {.mnemonic = "RLC B",       .length = 2, .cycles = 8,  .execute = &Cpu::rlc_b};
table[0x01] = {.mnemonic = "RLC C",       .length = 2, .cycles = 8,  .execute = &Cpu::rlc_c};
table[0x02] = {.mnemonic = "RLC D",       .length = 2, .cycles = 8,  .execute = &Cpu::rlc_d};
table[0x03] = {.mnemonic = "RLC E",       .length = 2, .cycles = 8,  .execute = &Cpu::rlc_e};
table[0x04] = {.mnemonic = "RLC H",       .length = 2, .cycles = 8,  .execute = &Cpu::rlc_h};
table[0x05] = {.mnemonic = "RLC L",       .length = 2, .cycles = 8,  .execute = &Cpu::rlc_l};
table[0x06] = {.mnemonic = "RLC [HL]",    .length = 2, .cycles = 16, .execute = &Cpu::rlc_at_hl};
table[0x07] = {.mnemonic = "RLC A",       .length = 2, .cycles = 8,  .execute = &Cpu::rlc_a};
table[0x08] = {.mnemonic = "RRC B",       .length = 2, .cycles = 8,  .execute = &Cpu::rrc_b};
table[0x09] = {.mnemonic = "RRC C",       .length = 2, .cycles = 8,  .execute = &Cpu::rrc_c};
table[0x0A] = {.mnemonic = "RRC D",       .length = 2, .cycles = 8,  .execute = &Cpu::rrc_d};
table[0x0B] = {.mnemonic = "RRC E",       .length = 2, .cycles = 8,  .execute = &Cpu::rrc_e};
table[0x0C] = {.mnemonic = "RRC H",       .length = 2, .cycles = 8,  .execute = &Cpu::rrc_h};
table[0x0D] = {.mnemonic = "RRC L",       .length = 2, .cycles = 8,  .execute = &Cpu::rrc_l};
table[0x0E] = {.mnemonic = "RRC [HL]",    .length = 2, .cycles = 16, .execute = &Cpu::rrc_at_hl};
table[0x0F] = {.mnemonic = "RRC A",       .length = 2, .cycles = 8,  .execute = &Cpu::rrc_a};
table[0x10] = {.mnemonic = "RL B",        .length = 2, .cycles = 8,  .execute = &Cpu::rl_b};
table[0x11] = {.mnemonic = "RL C",        .length = 2, .cycles = 8,  .execute = &Cpu::rl_c};
table[0x12] = {.mnemonic = "RL D",        .length = 2, .cycles = 8,  .execute = &Cpu::rl_d};
table[0x13] = {.mnemonic = "RL E",        .length = 2, .cycles = 8,  .execute = &Cpu::rl_e};
table[0x14] = {.mnemonic = "RL H",        .length = 2, .cycles = 8,  .execute = &Cpu::rl_h};
table[0x15] = {.mnemonic = "RL L",        .length = 2, .cycles = 8,  .execute = &Cpu::rl_l};
table[0x16] = {.mnemonic = "RL [HL]",     .length = 2, .cycles = 16, .execute = &Cpu::rl_at_hl};
table[0x17] = {.mnemonic = "RL A",        .length = 2, .cycles = 8,  .execute = &Cpu::rl_a};
table[0x18] = {.mnemonic = "RR B",        .length = 2, .cycles = 8,  .execute = &Cpu::rr_b};
table[0x19] = {.mnemonic = "RR C",        .length = 2, .cycles = 8,  .execute = &Cpu::rr_c};
table[0x1A] = {.mnemonic = "RR D",        .length = 2, .cycles = 8,  .execute = &Cpu::rr_d};
table[0x1B] = {.mnemonic = "RR E",        .length = 2, .cycles = 8,  .execute = &Cpu::rr_e};
table[0x1C] = {.mnemonic = "RR H",        .length = 2, .cycles = 8,  .execute = &Cpu::rr_h};
table[0x1D] = {.mnemonic = "RR L",        .length = 2, .cycles = 8,  .execute = &Cpu::rr_l};
table[0x1E] = {.mnemonic = "RR [HL]",     .length = 2, .cycles = 16, .execute = &Cpu::rr_at_hl};
table[0x1F] = {.mnemonic = "RR A",        .length = 2, .cycles = 8,  .execute = &Cpu::rr_a};
table[0x20] = {.mnemonic = "SLA B",       .length = 2, .cycles = 8,  .execute = &Cpu::sla_b};
table[0x21] = {.mnemonic = "SLA C",       .length = 2, .cycles = 8,  .execute = &Cpu::sla_c};
table[0x22] = {.mnemonic = "SLA D",       .length = 2, .cycles = 8,  .execute = &Cpu::sla_d};
table[0x23] = {.mnemonic = "SLA E",       .length = 2, .cycles = 8,  .execute = &Cpu::sla_e};
table[0x24] = {.mnemonic = "SLA H",       .length = 2, .cycles = 8,  .execute = &Cpu::sla_h};
table[0x25] = {.mnemonic = "SLA L",       .length = 2, .cycles = 8,  .execute = &Cpu::sla_l};
table[0x26] = {.mnemonic = "SLA [HL]",    .length = 2, .cycles = 16, .execute = &Cpu::sla_at_hl};
table[0x27] = {.mnemonic = "SLA A",       .length = 2, .cycles = 8,  .execute = &Cpu::sla_a};
table[0x28] = {.mnemonic = "SRA B",       .length = 2, .cycles = 8,  .execute = &Cpu::sra_b};
table[0x29] = {.mnemonic = "SRA C",       .length = 2, .cycles = 8,  .execute = &Cpu::sra_c};
table[0x2A] = {.mnemonic = "SRA D",       .length = 2, .cycles = 8,  .execute = &Cpu::sra_d};
table[0x2B] = {.mnemonic = "SRA E",       .length = 2, .cycles = 8,  .execute = &Cpu::sra_e};
table[0x2C] = {.mnemonic = "SRA H",       .length = 2, .cycles = 8,  .execute = &Cpu::sra_h};
table[0x2D] = {.mnemonic = "SRA L",       .length = 2, .cycles = 8,  .execute = &Cpu::sra_l};
table[0x2E] = {.mnemonic = "SRA [HL]",    .length = 2, .cycles = 16, .execute = &Cpu::sra_at_hl};
table[0x2F] = {.mnemonic = "SRA A",       .length = 2, .cycles = 8,  .execute = &Cpu::sra_a};
table[0x30] = {.mnemonic = "SWAP B",      .length = 2, .cycles = 8,  .execute = &Cpu::swap_b};
table[0x31] = {.mnemonic = "SWAP C",      .length = 2, .cycles = 8,  .execute = &Cpu::swap_c};
table[0x32] = {.mnemonic = "SWAP D",      .length = 2, .cycles = 8,  .execute = &Cpu::swap_d};
table[0x33] = {.mnemonic = "SWAP E",      .length = 2, .cycles = 8,  .execute = &Cpu::swap_e};
table[0x34] = {.mnemonic = "SWAP H",      .length = 2, .cycles = 8,  .execute = &Cpu::swap_h};
table[0x35] = {.mnemonic = "SWAP L",      .length = 2, .cycles = 8,  .execute = &Cpu::swap_l};
table[0x36] = {.mnemonic = "SWAP [HL]",   .length = 2, .cycles = 16, .execute = &Cpu::swap_at_hl};
table[0x37] = {.mnemonic = "SWAP A",      .length = 2, .cycles = 8,  .execute = &Cpu::swap_a};
table[0x38] = {.mnemonic = "SRL B",       .length = 2, .cycles = 8,  .execute = &Cpu::srl_b};
table[0x39] = {.mnemonic = "SRL C",       .length = 2, .cycles = 8,  .execute = &Cpu::srl_c};
table[0x3A] = {.mnemonic = "SRL D",       .length = 2, .cycles = 8,  .execute = &Cpu::srl_d};
table[0x3B] = {.mnemonic = "SRL E",       .length = 2, .cycles = 8,  .execute = &Cpu::srl_e};
table[0x3C] = {.mnemonic = "SRL H",       .length = 2, .cycles = 8,  .execute = &Cpu::srl_h};
table[0x3D] = {.mnemonic = "SRL L",       .length = 2, .cycles = 8,  .execute = &Cpu::srl_l};
table[0x3E] = {.mnemonic = "SRL [HL]",    .length = 2, .cycles = 16, .execute = &Cpu::srl_at_hl};
table[0x3F] = {.mnemonic = "SRL A",       .length = 2, .cycles = 8,  .execute = &Cpu::srl_a};
table[0x40] = {.mnemonic = "BIT 0, B",    .length = 2, .cycles = 8,  .execute = &Cpu::bit_0_b};
table[0x41] = {.mnemonic = "BIT 0, C",    .length = 2, .cycles = 8,  .execute = &Cpu::bit_0_c};
table[0x42] = {.mnemonic = "BIT 0, D",    .length = 2, .cycles = 8,  .execute = &Cpu::bit_0_d};
table[0x43] = {.mnemonic = "BIT 0, E",    .length = 2, .cycles = 8,  .execute = &Cpu::bit_0_e};
table[0x44] = {.mnemonic = "BIT 0, H",    .length = 2, .cycles = 8,  .execute = &Cpu::bit_0_h};
table[0x45] = {.mnemonic = "BIT 0, L",    .length = 2, .cycles = 8,  .execute = &Cpu::bit_0_l};
table[0x46] = {.mnemonic = "BIT 0, [HL]", .length = 2, .cycles = 12, .execute = &Cpu::bit_0_at_hl};
table[0x47] = {.mnemonic = "BIT 0, A",    .length = 2, .cycles = 8,  .execute = &Cpu::bit_0_a};
table[0x48] = {.mnemonic = "BIT 1, B",    .length = 2, .cycles = 8,  .execute = &Cpu::bit_1_b};
table[0x49] = {.mnemonic = "BIT 1, C",    .length = 2, .cycles = 8,  .execute = &Cpu::bit_1_c};
table[0x4A] = {.mnemonic = "BIT 1, D",    .length = 2, .cycles = 8,  .execute = &Cpu::bit_1_d};
table[0x4B] = {.mnemonic = "BIT 1, E",    .length = 2, .cycles = 8,  .execute = &Cpu::bit_1_e};
table[0x4C] = {.mnemonic = "BIT 1, H",    .length = 2, .cycles = 8,  .execute = &Cpu::bit_1_h};
table[0x4D] = {.mnemonic = "BIT 1, L",    .length = 2, .cycles = 8,  .execute = &Cpu::bit_1_l};
table[0x4E] = {.mnemonic = "BIT 1, [HL]", .length = 2, .cycles = 12, .execute = &Cpu::bit_1_at_hl};
table[0x4F] = {.mnemonic = "BIT 1, A",    .length = 2, .cycles = 8,  .execute = &Cpu::bit_1_a};
table[0x50] = {.mnemonic = "BIT 2, B",    .length = 2, .cycles = 8,  .execute = &Cpu::bit_2_b};
table[0x51] = {.mnemonic = "BIT 2, C",    .length = 2, .cycles = 8,  .execute = &Cpu::bit_2_c};
table[0x52] = {.mnemonic = "BIT 2, D",    .length = 2, .cycles = 8,  .execute = &Cpu::bit_2_d};
table[0x53] = {.mnemonic = "BIT 2, E",    .length = 2, .cycles = 8,  .execute = &Cpu::bit_2_e};
table[0x54] = {.mnemonic = "BIT 2, H",    .length = 2, .cycles = 8,  .execute = &Cpu::bit_2_h};
table[0x55] = {.mnemonic = "BIT 2, L",    .length = 2, .cycles = 8,  .execute = &Cpu::bit_2_l};
table[0x56] = {.mnemonic = "BIT 2, [HL]", .length = 2, .cycles = 12, .execute = &Cpu::bit_2_at_hl};
table[0x57] = {.mnemonic = "BIT 2, A",    .length = 2, .cycles = 8,  .execute = &Cpu::bit_2_a};
table[0x58] = {.mnemonic = "BIT 3, B",    .length = 2, .cycles = 8,  .execute = &Cpu::bit_3_b};
table[0x59] = {.mnemonic = "BIT 3, C",    .length = 2, .cycles = 8,  .execute = &Cpu::bit_3_c};
table[0x5A] = {.mnemonic = "BIT 3, D",    .length = 2, .cycles = 8,  .execute = &Cpu::bit_3_d};
table[0x5B] = {.mnemonic = "BIT 3, E",    .length = 2, .cycles = 8,  .execute = &Cpu::bit_3_e};
table[0x5C] = {.mnemonic = "BIT 3, H",    .length = 2, .cycles = 8,  .execute = &Cpu::bit_3_h};
table[0x5D] = {.mnemonic = "BIT 3, L",    .length = 2, .cycles = 8,  .execute = &Cpu::bit_3_l};
table[0x5E] = {.mnemonic = "BIT 3, [HL]", .length = 2, .cycles = 12, .execute = &Cpu::bit_3_at_hl};
table[0x5F] = {.mnemonic = "BIT 3, A",    .length = 2, .cycles = 8,  .execute = &Cpu::bit_3_a};
table[0x60] = {.mnemonic = "BIT 4, B",    .length = 2, .cycles = 8,  .execute = &Cpu::bit_4_b};
table[0x61] = {.mnemonic = "BIT 4, C",    .length = 2, .cycles = 8,  .execute = &Cpu::bit_4_c};
table[0x62] = {.mnemonic = "BIT 4, D",    .length = 2, .cycles = 8,  .execute = &Cpu::bit_4_d};
table[0x63] = {.mnemonic = "BIT 4, E",    .length = 2, .cycles = 8,  .execute = &Cpu::bit_4_e};
table[0x64] = {.mnemonic = "BIT 4, H",    .length = 2, .cycles = 8,  .execute = &Cpu::bit_4_h};
table[0x65] = {.mnemonic = "BIT 4, L",    .length = 2, .cycles = 8,  .execute = &Cpu::bit_4_l};
table[0x66] = {.mnemonic = "BIT 4, [HL]", .length = 2, .cycles = 12, .execute = &Cpu::bit_4_at_hl};
table[0x67] = {.mnemonic = "BIT 4, A",    .length = 2, .cycles = 8,  .execute = &Cpu::bit_4_a};
table[0x68] = {.mnemonic = "BIT 5, B",    .length = 2, .cycles = 8,  .execute = &Cpu::bit_5_b};
table[0x69] = {.mnemonic = "BIT 5, C",    .length = 2, .cycles = 8,  .execute = &Cpu::bit_5_c};
table[0x6A] = {.mnemonic = "BIT 5, D",    .length = 2, .cycles = 8,  .execute = &Cpu::bit_5_d};
table[0x6B] = {.mnemonic = "BIT 5, E",    .length = 2, .cycles = 8,  .execute = &Cpu::bit_5_e};
table[0x6C] = {.mnemonic = "BIT 5, H",    .length = 2, .cycles = 8,  .execute = &Cpu::bit_5_h};
table[0x6D] = {.mnemonic = "BIT 5, L",    .length = 2, .cycles = 8,  .execute = &Cpu::bit_5_l};
table[0x6E] = {.mnemonic = "BIT 5, [HL]", .length = 2, .cycles = 12, .execute = &Cpu::bit_5_at_hl};
table[0x6F] = {.mnemonic = "BIT 5, A",    .length = 2, .cycles = 8,  .execute = &Cpu::bit_5_a};
table[0x70] = {.mnemonic = "BIT 6, B",    .length = 2, .cycles = 8,  .execute = &Cpu::bit_6_b};
table[0x71] = {.mnemonic = "BIT 6, C",    .length = 2, .cycles = 8,  .execute = &Cpu::bit_6_c};
table[0x72] = {.mnemonic = "BIT 6, D",    .length = 2, .cycles = 8,  .execute = &Cpu::bit_6_d};
table[0x73] = {.mnemonic = "BIT 6, E",    .length = 2, .cycles = 8,  .execute = &Cpu::bit_6_e};
table[0x74] = {.mnemonic = "BIT 6, H",    .length = 2, .cycles = 8,  .execute = &Cpu::bit_6_h};
table[0x75] = {.mnemonic = "BIT 6, L",    .length = 2, .cycles = 8,  .execute = &Cpu::bit_6_l};
table[0x76] = {.mnemonic = "BIT 6, [HL]", .length = 2, .cycles = 12, .execute = &Cpu::bit_6_at_hl};
table[0x77] = {.mnemonic = "BIT 6, A",    .length = 2, .cycles = 8,  .execute = &Cpu::bit_6_a};
table[0x78] = {.mnemonic = "BIT 7, B",    .length = 2, .cycles = 8,  .execute = &Cpu::bit_7_b};
table[0x79] = {.mnemonic = "BIT 7, C",    .length = 2, .cycles = 8,  .execute = &Cpu::bit_7_c};
table[0x7A] = {.mnemonic = "BIT 7, D",    .length = 2, .cycles = 8,  .execute = &Cpu::bit_7_d};
table[0x7B] = {.mnemonic = "BIT 7, E",    .length = 2, .cycles = 8,  .execute = &Cpu::bit_7_e};
table[0x7C] = {.mnemonic = "BIT 7, H",    .length = 2, .cycles = 8,  .execute = &Cpu::bit_7_h};
table[0x7D] = {.mnemonic = "BIT 7, L",    .length = 2, .cycles = 8,  .execute = &Cpu::bit_7_l};
table[0x7E] = {.mnemonic = "BIT 7, [HL]", .length = 2, .cycles = 12, .execute = &Cpu::bit_7_at_hl};
table[0x7F] = {.mnemonic = "BIT 7, A",    .length = 2, .cycles = 8,  .execute = &Cpu::bit_7_a};
table[0x80] = {.mnemonic = "RES 0, B",    .length = 2, .cycles = 8,  .execute = &Cpu::res_0_b};
table[0x81] = {.mnemonic = "RES 0, C",    .length = 2, .cycles = 8,  .execute = &Cpu::res_0_c};
table[0x82] = {.mnemonic = "RES 0, D",    .length = 2, .cycles = 8,  .execute = &Cpu::res_0_d};
table[0x83] = {.mnemonic = "RES 0, E",    .length = 2, .cycles = 8,  .execute = &Cpu::res_0_e};
table[0x84] = {.mnemonic = "RES 0, H",    .length = 2, .cycles = 8,  .execute = &Cpu::res_0_h};
table[0x85] = {.mnemonic = "RES 0, L",    .length = 2, .cycles = 8,  .execute = &Cpu::res_0_l};
table[0x86] = {.mnemonic = "RES 0, [HL]", .length = 2, .cycles = 16, .execute = &Cpu::res_0_at_hl};
table[0x87] = {.mnemonic = "RES 0, A",    .length = 2, .cycles = 8,  .execute = &Cpu::res_0_a};
table[0x88] = {.mnemonic = "RES 1, B",    .length = 2, .cycles = 8,  .execute = &Cpu::res_1_b};
table[0x89] = {.mnemonic = "RES 1, C",    .length = 2, .cycles = 8,  .execute = &Cpu::res_1_c};
table[0x8A] = {.mnemonic = "RES 1, D",    .length = 2, .cycles = 8,  .execute = &Cpu::res_1_d};
table[0x8B] = {.mnemonic = "RES 1, E",    .length = 2, .cycles = 8,  .execute = &Cpu::res_1_e};
table[0x8C] = {.mnemonic = "RES 1, H",    .length = 2, .cycles = 8,  .execute = &Cpu::res_1_h};
table[0x8D] = {.mnemonic = "RES 1, L",    .length = 2, .cycles = 8,  .execute = &Cpu::res_1_l};
table[0x8E] = {.mnemonic = "RES 1, [HL]", .length = 2, .cycles = 16, .execute = &Cpu::res_1_at_hl};
table[0x8F] = {.mnemonic = "RES 1, A",    .length = 2, .cycles = 8,  .execute = &Cpu::res_1_a};
table[0x90] = {.mnemonic = "RES 2, B",    .length = 2, .cycles = 8,  .execute = &Cpu::res_2_b};
table[0x91] = {.mnemonic = "RES 2, C",    .length = 2, .cycles = 8,  .execute = &Cpu::res_2_c};
table[0x92] = {.mnemonic = "RES 2, D",    .length = 2, .cycles = 8,  .execute = &Cpu::res_2_d};
table[0x93] = {.mnemonic = "RES 2, E",    .length = 2, .cycles = 8,  .execute = &Cpu::res_2_e};
table[0x94] = {.mnemonic = "RES 2, H",    .length = 2, .cycles = 8,  .execute = &Cpu::res_2_h};
table[0x95] = {.mnemonic = "RES 2, L",    .length = 2, .cycles = 8,  .execute = &Cpu::res_2_l};
table[0x96] = {.mnemonic = "RES 2, [HL]", .length = 2, .cycles = 16, .execute = &Cpu::res_2_at_hl};
table[0x97] = {.mnemonic = "RES 2, A",    .length = 2, .cycles = 8,  .execute = &Cpu::res_2_a};
table[0x98] = {.mnemonic = "RES 3, B",    .length = 2, .cycles = 8,  .execute = &Cpu::res_3_b};
table[0x99] = {.mnemonic = "RES 3, C",    .length = 2, .cycles = 8,  .execute = &Cpu::res_3_c};
table[0x9A] = {.mnemonic = "RES 3, D",    .length = 2, .cycles = 8,  .execute = &Cpu::res_3_d};
table[0x9B] = {.mnemonic = "RES 3, E",    .length = 2, .cycles = 8,  .execute = &Cpu::res_3_e};
table[0x9C] = {.mnemonic = "RES 3, H",    .length = 2, .cycles = 8,  .execute = &Cpu::res_3_h};
table[0x9D] = {.mnemonic = "RES 3, L",    .length = 2, .cycles = 8,  .execute = &Cpu::res_3_l};
table[0x9E] = {.mnemonic = "RES 3, [HL]", .length = 2, .cycles = 16, .execute = &Cpu::res_3_at_hl};
table[0x9F] = {.mnemonic = "RES 3, A",    .length = 2, .cycles = 8,  .execute = &Cpu::res_3_a};
table[0xA0] = {.mnemonic = "RES 4, B",    .length = 2, .cycles = 8,  .execute = &Cpu::res_4_b};
table[0xA1] = {.mnemonic = "RES 4, C",    .length = 2, .cycles = 8,  .execute = &Cpu::res_4_c};
table[0xA2] = {.mnemonic = "RES 4, D",    .length = 2, .cycles = 8,  .execute = &Cpu::res_4_d};
table[0xA3] = {.mnemonic = "RES 4, E",    .length = 2, .cycles = 8,  .execute = &Cpu::res_4_e};
table[0xA4] = {.mnemonic = "RES 4, H",    .length = 2, .cycles = 8,  .execute = &Cpu::res_4_h};
table[0xA5] = {.mnemonic = "RES 4, L",    .length = 2, .cycles = 8,  .execute = &Cpu::res_4_l};
table[0xA6] = {.mnemonic = "RES 4, [HL]", .length = 2, .cycles = 16, .execute = &Cpu::res_4_at_hl};
table[0xA7] = {.mnemonic = "RES 4, A",    .length = 2, .cycles = 8,  .execute = &Cpu::res_4_a};
table[0xA8] = {.mnemonic = "RES 5, B",    .length = 2, .cycles = 8,  .execute = &Cpu::res_5_b};
table[0xA9] = {.mnemonic = "RES 5, C",    .length = 2, .cycles = 8,  .execute = &Cpu::res_5_c};
table[0xAA] = {.mnemonic = "RES 5, D",    .length = 2, .cycles = 8,  .execute = &Cpu::res_5_d};
table[0xAB] = {.mnemonic = "RES 5, E",    .length = 2, .cycles = 8,  .execute = &Cpu::res_5_e};
table[0xAC] = {.mnemonic = "RES 5, H",    .length = 2, .cycles = 8,  .execute = &Cpu::res_5_h};
table[0xAD] = {.mnemonic = "RES 5, L",    .length = 2, .cycles = 8,  .execute = &Cpu::res_5_l};
table[0xAE] = {.mnemonic = "RES 5, [HL]", .length = 2, .cycles = 16, .execute = &Cpu::res_5_at_hl};
table[0xAF] = {.mnemonic = "RES 5, A",    .length = 2, .cycles = 8,  .execute = &Cpu::res_5_a};
table[0xB0] = {.mnemonic = "RES 6, B",    .length = 2, .cycles = 8,  .execute = &Cpu::res_6_b};
table[0xB1] = {.mnemonic = "RES 6, C",    .length = 2, .cycles = 8,  .execute = &Cpu::res_6_c};
table[0xB2] = {.mnemonic = "RES 6, D",    .length = 2, .cycles = 8,  .execute = &Cpu::res_6_d};
table[0xB3] = {.mnemonic = "RES 6, E",    .length = 2, .cycles = 8,  .execute = &Cpu::res_6_e};
table[0xB4] = {.mnemonic = "RES 6, H",    .length = 2, .cycles = 8,  .execute = &Cpu::res_6_h};
table[0xB5] = {.mnemonic = "RES 6, L",    .length = 2, .cycles = 8,  .execute = &Cpu::res_6_l};
table[0xB6] = {.mnemonic = "RES 6, [HL]", .length = 2, .cycles = 16, .execute = &Cpu::res_6_at_hl};
table[0xB7] = {.mnemonic = "RES 6, A",    .length = 2, .cycles = 8,  .execute = &Cpu::res_6_a};
table[0xB8] = {.mnemonic = "RES 7, B",    .length = 2, .cycles = 8,  .execute = &Cpu::res_7_b};
table[0xB9] = {.mnemonic = "RES 7, C",    .length = 2, .cycles = 8,  .execute = &Cpu::res_7_c};
table[0xBA] = {.mnemonic = "RES 7, D",    .length = 2, .cycles = 8,  .execute = &Cpu::res_7_d};
table[0xBB] = {.mnemonic = "RES 7, E",    .length = 2, .cycles = 8,  .execute = &Cpu::res_7_e};
table[0xBC] = {.mnemonic = "RES 7, H",    .length = 2, .cycles = 8,  .execute = &Cpu::res_7_h};
table[0xBD] = {.mnemonic = "RES 7, L",    .length = 2, .cycles = 8,  .execute = &Cpu::res_7_l};
table[0xBE] = {.mnemonic = "RES 7, [HL]", .length = 2, .cycles = 16, .execute = &Cpu::res_7_at_hl};
table[0xBF] = {.mnemonic = "RES 7, A",    .length = 2, .cycles = 8,  .execute = &Cpu::res_7_a};
table[0xC0] = {.mnemonic = "SET 0, B",    .length = 2, .cycles = 8,  .execute = &Cpu::set_0_b};
table[0xC1] = {.mnemonic = "SET 0, C",    .length = 2, .cycles = 8,  .execute = &Cpu::set_0_c};
table[0xC2] = {.mnemonic = "SET 0, D",    .length = 2, .cycles = 8,  .execute = &Cpu::set_0_d};
table[0xC3] = {.mnemonic = "SET 0, E",    .length = 2, .cycles = 8,  .execute = &Cpu::set_0_e};
table[0xC4] = {.mnemonic = "SET 0, H",    .length = 2, .cycles = 8,  .execute = &Cpu::set_0_h};
table[0xC5] = {.mnemonic = "SET 0, L",    .length = 2, .cycles = 8,  .execute = &Cpu::set_0_l};
table[0xC6] = {.mnemonic = "SET 0, [HL]", .length = 2, .cycles = 16, .execute = &Cpu::set_0_at_hl};
table[0xC7] = {.mnemonic = "SET 0, A",    .length = 2, .cycles = 8,  .execute = &Cpu::set_0_a};
table[0xC8] = {.mnemonic = "SET 1, B",    .length = 2, .cycles = 8,  .execute = &Cpu::set_1_b};
table[0xC9] = {.mnemonic = "SET 1, C",    .length = 2, .cycles = 8,  .execute = &Cpu::set_1_c};
table[0xCA] = {.mnemonic = "SET 1, D",    .length = 2, .cycles = 8,  .execute = &Cpu::set_1_d};
table[0xCB] = {.mnemonic = "SET 1, E",    .length = 2, .cycles = 8,  .execute = &Cpu::set_1_e};
table[0xCC] = {.mnemonic = "SET 1, H",    .length = 2, .cycles = 8,  .execute = &Cpu::set_1_h};
table[0xCD] = {.mnemonic = "SET 1, L",    .length = 2, .cycles = 8,  .execute = &Cpu::set_1_l};
table[0xCE] = {.mnemonic = "SET 1, [HL]", .length = 2, .cycles = 16, .execute = &Cpu::set_1_at_hl};
table[0xCF] = {.mnemonic = "SET 1, A",    .length = 2, .cycles = 8,  .execute = &Cpu::set_1_a};
table[0xD0] = {.mnemonic = "SET 2, B",    .length = 2, .cycles = 8,  .execute = &Cpu::set_2_b};
table[0xD1] = {.mnemonic = "SET 2, C",    .length = 2, .cycles = 8,  .execute = &Cpu::set_2_c};
table[0xD2] = {.mnemonic = "SET 2, D",    .length = 2, .cycles = 8,  .execute = &Cpu::set_2_d};
table[0xD3] = {.mnemonic = "SET 2, E",    .length = 2, .cycles = 8,  .execute = &Cpu::set_2_e};
table[0xD4] = {.mnemonic = "SET 2, H",    .length = 2, .cycles = 8,  .execute = &Cpu::set_2_h};
table[0xD5] = {.mnemonic = "SET 2, L",    .length = 2, .cycles = 8,  .execute = &Cpu::set_2_l};
table[0xD6] = {.mnemonic = "SET 2, [HL]", .length = 2, .cycles = 16, .execute = &Cpu::set_2_at_hl};
table[0xD7] = {.mnemonic = "SET 2, A",    .length = 2, .cycles = 8,  .execute = &Cpu::set_2_a};
table[0xD8] = {.mnemonic = "SET 3, B",    .length = 2, .cycles = 8,  .execute = &Cpu::set_3_b};
table[0xD9] = {.mnemonic = "SET 3, C",    .length = 2, .cycles = 8,  .execute = &Cpu::set_3_c};
table[0xDA] = {.mnemonic = "SET 3, D",    .length = 2, .cycles = 8,  .execute = &Cpu::set_3_d};
table[0xDB] = {.mnemonic = "SET 3, E",    .length = 2, .cycles = 8,  .execute = &Cpu::set_3_e};
table[0xDC] = {.mnemonic = "SET 3, H",    .length = 2, .cycles = 8,  .execute = &Cpu::set_3_h};
table[0xDD] = {.mnemonic = "SET 3, L",    .length = 2, .cycles = 8,  .execute = &Cpu::set_3_l};
table[0xDE] = {.mnemonic = "SET 3, [HL]", .length = 2, .cycles = 16, .execute = &Cpu::set_3_at_hl};
table[0xDF] = {.mnemonic = "SET 3, A",    .length = 2, .cycles = 8,  .execute = &Cpu::set_3_a};
table[0xE0] = {.mnemonic = "SET 4, B",    .length = 2, .cycles = 8,  .execute = &Cpu::set_4_b};
table[0xE1] = {.mnemonic = "SET 4, C",    .length = 2, .cycles = 8,  .execute = &Cpu::set_4_c};
table[0xE2] = {.mnemonic = "SET 4, D",    .length = 2, .cycles = 8,  .execute = &Cpu::set_4_d};
table[0xE3] = {.mnemonic = "SET 4, E",    .length = 2, .cycles = 8,  .execute = &Cpu::set_4_e};
table[0xE4] = {.mnemonic = "SET 4, H",    .length = 2, .cycles = 8,  .execute = &Cpu::set_4_h};
table[0xE5] = {.mnemonic = "SET 4, L",    .length = 2, .cycles = 8,  .execute = &Cpu::set_4_l};
table[0xE6] = {.mnemonic = "SET 4, [HL]", .length = 2, .cycles = 16, .execute = &Cpu::set_4_at_hl};
table[0xE7] = {.mnemonic = "SET 4, A",    .length = 2, .cycles = 8,  .execute = &Cpu::set_4_a};
table[0xE8] = {.mnemonic = "SET 5, B",    .length = 2, .cycles = 8,  .execute = &Cpu::set_5_b};
table[0xE9] = {.mnemonic = "SET 5, C",    .length = 2, .cycles = 8,  .execute = &Cpu::set_5_c};
table[0xEA] = {.mnemonic = "SET 5, D",    .length = 2, .cycles = 8,  .execute = &Cpu::set_5_d};
table[0xEB] = {.mnemonic = "SET 5, E",    .length = 2, .cycles = 8,  .execute = &Cpu::set_5_e};
table[0xEC] = {.mnemonic = "SET 5, H",    .length = 2, .cycles = 8,  .execute = &Cpu::set_5_h};
table[0xED] = {.mnemonic = "SET 5, L",    .length = 2, .cycles = 8,  .execute = &Cpu::set_5_l};
table[0xEE] = {.mnemonic = "SET 5, [HL]", .length = 2, .cycles = 16, .execute = &Cpu::set_5_at_hl};
table[0xEF] = {.mnemonic = "SET 5, A",    .length = 2, .cycles = 8,  .execute = &Cpu::set_5_a};
table[0xF0] = {.mnemonic = "SET 6, B",    .length = 2, .cycles = 8,  .execute = &Cpu::set_6_b};
table[0xF1] = {.mnemonic = "SET 6, C",    .length = 2, .cycles = 8,  .execute = &Cpu::set_6_c};
table[0xF2] = {.mnemonic = "SET 6, D",    .length = 2, .cycles = 8,  .execute = &Cpu::set_6_d};
table[0xF3] = {.mnemonic = "SET 6, E",    .length = 2, .cycles = 8,  .execute = &Cpu::set_6_e};
table[0xF4] = {.mnemonic = "SET 6, H",    .length = 2, .cycles = 8,  .execute = &Cpu::set_6_h};
table[0xF5] = {.mnemonic = "SET 6, L",    .length = 2, .cycles = 8,  .execute = &Cpu::set_6_l};
table[0xF6] = {.mnemonic = "SET 6, [HL]", .length = 2, .cycles = 16, .execute = &Cpu::set_6_at_hl};
table[0xF7] = {.mnemonic = "SET 6, A",    .length = 2, .cycles = 8,  .execute = &Cpu::set_6_a};
table[0xF8] = {.mnemonic = "SET 7, B",    .length = 2, .cycles = 8,  .execute = &Cpu::set_7_b};
table[0xF9] = {.mnemonic = "SET 7, C",    .length = 2, .cycles = 8,  .execute = &Cpu::set_7_c};
table[0xFA] = {.mnemonic = "SET 7, D",    .length = 2, .cycles = 8,  .execute = &Cpu::set_7_d};
table[0xFB] = {.mnemonic = "SET 7, E",    .length = 2, .cycles = 8,  .execute = &Cpu::set_7_e};
table[0xFC] = {.mnemonic = "SET 7, H",    .length = 2, .cycles = 8,  .execute = &Cpu::set_7_h};
table[0xFD] = {.mnemonic = "SET 7, L",    .length = 2, .cycles = 8,  .execute = &Cpu::set_7_l};
table[0xFE] = {.mnemonic = "SET 7, [HL]", .length = 2, .cycles = 16, .execute = &Cpu::set_7_at_hl};
table[0xFF] = {.mnemonic = "SET 7, A",    .length = 2, .cycles = 8,  .execute = &Cpu::set_7_a};

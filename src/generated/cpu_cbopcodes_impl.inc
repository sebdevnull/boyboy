// ============================================================
// CPU stub implementations (CB-prefixed)
// AUTO-GENERATED FILE â€” DO NOT EDIT MANUALLY
// Generated from Opcodes.json on 2025-09-07 10:00:59 UTC
// ============================================================

#include "errors.h"

#ifndef CPU_RLC_B
void boyboy::cpu::Cpu::rlc_b() {
    throw boyboy::errors::UnimplementedOpcode(0x00, "RLC B");
}
#endif // CPU_RLC_B

#ifndef CPU_RLC_C
void boyboy::cpu::Cpu::rlc_c() {
    throw boyboy::errors::UnimplementedOpcode(0x01, "RLC C");
}
#endif // CPU_RLC_C

#ifndef CPU_RLC_D
void boyboy::cpu::Cpu::rlc_d() {
    throw boyboy::errors::UnimplementedOpcode(0x02, "RLC D");
}
#endif // CPU_RLC_D

#ifndef CPU_RLC_E
void boyboy::cpu::Cpu::rlc_e() {
    throw boyboy::errors::UnimplementedOpcode(0x03, "RLC E");
}
#endif // CPU_RLC_E

#ifndef CPU_RLC_H
void boyboy::cpu::Cpu::rlc_h() {
    throw boyboy::errors::UnimplementedOpcode(0x04, "RLC H");
}
#endif // CPU_RLC_H

#ifndef CPU_RLC_L
void boyboy::cpu::Cpu::rlc_l() {
    throw boyboy::errors::UnimplementedOpcode(0x05, "RLC L");
}
#endif // CPU_RLC_L

#ifndef CPU_RLC_AT_HL
void boyboy::cpu::Cpu::rlc_at_hl() {
    throw boyboy::errors::UnimplementedOpcode(0x06, "RLC [HL]");
}
#endif // CPU_RLC_AT_HL

#ifndef CPU_RLC_A
void boyboy::cpu::Cpu::rlc_a() {
    throw boyboy::errors::UnimplementedOpcode(0x07, "RLC A");
}
#endif // CPU_RLC_A

#ifndef CPU_RRC_B
void boyboy::cpu::Cpu::rrc_b() {
    throw boyboy::errors::UnimplementedOpcode(0x08, "RRC B");
}
#endif // CPU_RRC_B

#ifndef CPU_RRC_C
void boyboy::cpu::Cpu::rrc_c() {
    throw boyboy::errors::UnimplementedOpcode(0x09, "RRC C");
}
#endif // CPU_RRC_C

#ifndef CPU_RRC_D
void boyboy::cpu::Cpu::rrc_d() {
    throw boyboy::errors::UnimplementedOpcode(0x0A, "RRC D");
}
#endif // CPU_RRC_D

#ifndef CPU_RRC_E
void boyboy::cpu::Cpu::rrc_e() {
    throw boyboy::errors::UnimplementedOpcode(0x0B, "RRC E");
}
#endif // CPU_RRC_E

#ifndef CPU_RRC_H
void boyboy::cpu::Cpu::rrc_h() {
    throw boyboy::errors::UnimplementedOpcode(0x0C, "RRC H");
}
#endif // CPU_RRC_H

#ifndef CPU_RRC_L
void boyboy::cpu::Cpu::rrc_l() {
    throw boyboy::errors::UnimplementedOpcode(0x0D, "RRC L");
}
#endif // CPU_RRC_L

#ifndef CPU_RRC_AT_HL
void boyboy::cpu::Cpu::rrc_at_hl() {
    throw boyboy::errors::UnimplementedOpcode(0x0E, "RRC [HL]");
}
#endif // CPU_RRC_AT_HL

#ifndef CPU_RRC_A
void boyboy::cpu::Cpu::rrc_a() {
    throw boyboy::errors::UnimplementedOpcode(0x0F, "RRC A");
}
#endif // CPU_RRC_A

#ifndef CPU_RL_B
void boyboy::cpu::Cpu::rl_b() {
    throw boyboy::errors::UnimplementedOpcode(0x10, "RL B");
}
#endif // CPU_RL_B

#ifndef CPU_RL_C
void boyboy::cpu::Cpu::rl_c() {
    throw boyboy::errors::UnimplementedOpcode(0x11, "RL C");
}
#endif // CPU_RL_C

#ifndef CPU_RL_D
void boyboy::cpu::Cpu::rl_d() {
    throw boyboy::errors::UnimplementedOpcode(0x12, "RL D");
}
#endif // CPU_RL_D

#ifndef CPU_RL_E
void boyboy::cpu::Cpu::rl_e() {
    throw boyboy::errors::UnimplementedOpcode(0x13, "RL E");
}
#endif // CPU_RL_E

#ifndef CPU_RL_H
void boyboy::cpu::Cpu::rl_h() {
    throw boyboy::errors::UnimplementedOpcode(0x14, "RL H");
}
#endif // CPU_RL_H

#ifndef CPU_RL_L
void boyboy::cpu::Cpu::rl_l() {
    throw boyboy::errors::UnimplementedOpcode(0x15, "RL L");
}
#endif // CPU_RL_L

#ifndef CPU_RL_AT_HL
void boyboy::cpu::Cpu::rl_at_hl() {
    throw boyboy::errors::UnimplementedOpcode(0x16, "RL [HL]");
}
#endif // CPU_RL_AT_HL

#ifndef CPU_RL_A
void boyboy::cpu::Cpu::rl_a() {
    throw boyboy::errors::UnimplementedOpcode(0x17, "RL A");
}
#endif // CPU_RL_A

#ifndef CPU_RR_B
void boyboy::cpu::Cpu::rr_b() {
    throw boyboy::errors::UnimplementedOpcode(0x18, "RR B");
}
#endif // CPU_RR_B

#ifndef CPU_RR_C
void boyboy::cpu::Cpu::rr_c() {
    throw boyboy::errors::UnimplementedOpcode(0x19, "RR C");
}
#endif // CPU_RR_C

#ifndef CPU_RR_D
void boyboy::cpu::Cpu::rr_d() {
    throw boyboy::errors::UnimplementedOpcode(0x1A, "RR D");
}
#endif // CPU_RR_D

#ifndef CPU_RR_E
void boyboy::cpu::Cpu::rr_e() {
    throw boyboy::errors::UnimplementedOpcode(0x1B, "RR E");
}
#endif // CPU_RR_E

#ifndef CPU_RR_H
void boyboy::cpu::Cpu::rr_h() {
    throw boyboy::errors::UnimplementedOpcode(0x1C, "RR H");
}
#endif // CPU_RR_H

#ifndef CPU_RR_L
void boyboy::cpu::Cpu::rr_l() {
    throw boyboy::errors::UnimplementedOpcode(0x1D, "RR L");
}
#endif // CPU_RR_L

#ifndef CPU_RR_AT_HL
void boyboy::cpu::Cpu::rr_at_hl() {
    throw boyboy::errors::UnimplementedOpcode(0x1E, "RR [HL]");
}
#endif // CPU_RR_AT_HL

#ifndef CPU_RR_A
void boyboy::cpu::Cpu::rr_a() {
    throw boyboy::errors::UnimplementedOpcode(0x1F, "RR A");
}
#endif // CPU_RR_A

#ifndef CPU_SLA_B
void boyboy::cpu::Cpu::sla_b() {
    throw boyboy::errors::UnimplementedOpcode(0x20, "SLA B");
}
#endif // CPU_SLA_B

#ifndef CPU_SLA_C
void boyboy::cpu::Cpu::sla_c() {
    throw boyboy::errors::UnimplementedOpcode(0x21, "SLA C");
}
#endif // CPU_SLA_C

#ifndef CPU_SLA_D
void boyboy::cpu::Cpu::sla_d() {
    throw boyboy::errors::UnimplementedOpcode(0x22, "SLA D");
}
#endif // CPU_SLA_D

#ifndef CPU_SLA_E
void boyboy::cpu::Cpu::sla_e() {
    throw boyboy::errors::UnimplementedOpcode(0x23, "SLA E");
}
#endif // CPU_SLA_E

#ifndef CPU_SLA_H
void boyboy::cpu::Cpu::sla_h() {
    throw boyboy::errors::UnimplementedOpcode(0x24, "SLA H");
}
#endif // CPU_SLA_H

#ifndef CPU_SLA_L
void boyboy::cpu::Cpu::sla_l() {
    throw boyboy::errors::UnimplementedOpcode(0x25, "SLA L");
}
#endif // CPU_SLA_L

#ifndef CPU_SLA_AT_HL
void boyboy::cpu::Cpu::sla_at_hl() {
    throw boyboy::errors::UnimplementedOpcode(0x26, "SLA [HL]");
}
#endif // CPU_SLA_AT_HL

#ifndef CPU_SLA_A
void boyboy::cpu::Cpu::sla_a() {
    throw boyboy::errors::UnimplementedOpcode(0x27, "SLA A");
}
#endif // CPU_SLA_A

#ifndef CPU_SRA_B
void boyboy::cpu::Cpu::sra_b() {
    throw boyboy::errors::UnimplementedOpcode(0x28, "SRA B");
}
#endif // CPU_SRA_B

#ifndef CPU_SRA_C
void boyboy::cpu::Cpu::sra_c() {
    throw boyboy::errors::UnimplementedOpcode(0x29, "SRA C");
}
#endif // CPU_SRA_C

#ifndef CPU_SRA_D
void boyboy::cpu::Cpu::sra_d() {
    throw boyboy::errors::UnimplementedOpcode(0x2A, "SRA D");
}
#endif // CPU_SRA_D

#ifndef CPU_SRA_E
void boyboy::cpu::Cpu::sra_e() {
    throw boyboy::errors::UnimplementedOpcode(0x2B, "SRA E");
}
#endif // CPU_SRA_E

#ifndef CPU_SRA_H
void boyboy::cpu::Cpu::sra_h() {
    throw boyboy::errors::UnimplementedOpcode(0x2C, "SRA H");
}
#endif // CPU_SRA_H

#ifndef CPU_SRA_L
void boyboy::cpu::Cpu::sra_l() {
    throw boyboy::errors::UnimplementedOpcode(0x2D, "SRA L");
}
#endif // CPU_SRA_L

#ifndef CPU_SRA_AT_HL
void boyboy::cpu::Cpu::sra_at_hl() {
    throw boyboy::errors::UnimplementedOpcode(0x2E, "SRA [HL]");
}
#endif // CPU_SRA_AT_HL

#ifndef CPU_SRA_A
void boyboy::cpu::Cpu::sra_a() {
    throw boyboy::errors::UnimplementedOpcode(0x2F, "SRA A");
}
#endif // CPU_SRA_A

#ifndef CPU_SWAP_B
void boyboy::cpu::Cpu::swap_b() {
    throw boyboy::errors::UnimplementedOpcode(0x30, "SWAP B");
}
#endif // CPU_SWAP_B

#ifndef CPU_SWAP_C
void boyboy::cpu::Cpu::swap_c() {
    throw boyboy::errors::UnimplementedOpcode(0x31, "SWAP C");
}
#endif // CPU_SWAP_C

#ifndef CPU_SWAP_D
void boyboy::cpu::Cpu::swap_d() {
    throw boyboy::errors::UnimplementedOpcode(0x32, "SWAP D");
}
#endif // CPU_SWAP_D

#ifndef CPU_SWAP_E
void boyboy::cpu::Cpu::swap_e() {
    throw boyboy::errors::UnimplementedOpcode(0x33, "SWAP E");
}
#endif // CPU_SWAP_E

#ifndef CPU_SWAP_H
void boyboy::cpu::Cpu::swap_h() {
    throw boyboy::errors::UnimplementedOpcode(0x34, "SWAP H");
}
#endif // CPU_SWAP_H

#ifndef CPU_SWAP_L
void boyboy::cpu::Cpu::swap_l() {
    throw boyboy::errors::UnimplementedOpcode(0x35, "SWAP L");
}
#endif // CPU_SWAP_L

#ifndef CPU_SWAP_AT_HL
void boyboy::cpu::Cpu::swap_at_hl() {
    throw boyboy::errors::UnimplementedOpcode(0x36, "SWAP [HL]");
}
#endif // CPU_SWAP_AT_HL

#ifndef CPU_SWAP_A
void boyboy::cpu::Cpu::swap_a() {
    throw boyboy::errors::UnimplementedOpcode(0x37, "SWAP A");
}
#endif // CPU_SWAP_A

#ifndef CPU_SRL_B
void boyboy::cpu::Cpu::srl_b() {
    throw boyboy::errors::UnimplementedOpcode(0x38, "SRL B");
}
#endif // CPU_SRL_B

#ifndef CPU_SRL_C
void boyboy::cpu::Cpu::srl_c() {
    throw boyboy::errors::UnimplementedOpcode(0x39, "SRL C");
}
#endif // CPU_SRL_C

#ifndef CPU_SRL_D
void boyboy::cpu::Cpu::srl_d() {
    throw boyboy::errors::UnimplementedOpcode(0x3A, "SRL D");
}
#endif // CPU_SRL_D

#ifndef CPU_SRL_E
void boyboy::cpu::Cpu::srl_e() {
    throw boyboy::errors::UnimplementedOpcode(0x3B, "SRL E");
}
#endif // CPU_SRL_E

#ifndef CPU_SRL_H
void boyboy::cpu::Cpu::srl_h() {
    throw boyboy::errors::UnimplementedOpcode(0x3C, "SRL H");
}
#endif // CPU_SRL_H

#ifndef CPU_SRL_L
void boyboy::cpu::Cpu::srl_l() {
    throw boyboy::errors::UnimplementedOpcode(0x3D, "SRL L");
}
#endif // CPU_SRL_L

#ifndef CPU_SRL_AT_HL
void boyboy::cpu::Cpu::srl_at_hl() {
    throw boyboy::errors::UnimplementedOpcode(0x3E, "SRL [HL]");
}
#endif // CPU_SRL_AT_HL

#ifndef CPU_SRL_A
void boyboy::cpu::Cpu::srl_a() {
    throw boyboy::errors::UnimplementedOpcode(0x3F, "SRL A");
}
#endif // CPU_SRL_A

#ifndef CPU_BIT_0_B
void boyboy::cpu::Cpu::bit_0_b() {
    throw boyboy::errors::UnimplementedOpcode(0x40, "BIT 0, B");
}
#endif // CPU_BIT_0_B

#ifndef CPU_BIT_0_C
void boyboy::cpu::Cpu::bit_0_c() {
    throw boyboy::errors::UnimplementedOpcode(0x41, "BIT 0, C");
}
#endif // CPU_BIT_0_C

#ifndef CPU_BIT_0_D
void boyboy::cpu::Cpu::bit_0_d() {
    throw boyboy::errors::UnimplementedOpcode(0x42, "BIT 0, D");
}
#endif // CPU_BIT_0_D

#ifndef CPU_BIT_0_E
void boyboy::cpu::Cpu::bit_0_e() {
    throw boyboy::errors::UnimplementedOpcode(0x43, "BIT 0, E");
}
#endif // CPU_BIT_0_E

#ifndef CPU_BIT_0_H
void boyboy::cpu::Cpu::bit_0_h() {
    throw boyboy::errors::UnimplementedOpcode(0x44, "BIT 0, H");
}
#endif // CPU_BIT_0_H

#ifndef CPU_BIT_0_L
void boyboy::cpu::Cpu::bit_0_l() {
    throw boyboy::errors::UnimplementedOpcode(0x45, "BIT 0, L");
}
#endif // CPU_BIT_0_L

#ifndef CPU_BIT_0_AT_HL
void boyboy::cpu::Cpu::bit_0_at_hl() {
    throw boyboy::errors::UnimplementedOpcode(0x46, "BIT 0, [HL]");
}
#endif // CPU_BIT_0_AT_HL

#ifndef CPU_BIT_0_A
void boyboy::cpu::Cpu::bit_0_a() {
    throw boyboy::errors::UnimplementedOpcode(0x47, "BIT 0, A");
}
#endif // CPU_BIT_0_A

#ifndef CPU_BIT_1_B
void boyboy::cpu::Cpu::bit_1_b() {
    throw boyboy::errors::UnimplementedOpcode(0x48, "BIT 1, B");
}
#endif // CPU_BIT_1_B

#ifndef CPU_BIT_1_C
void boyboy::cpu::Cpu::bit_1_c() {
    throw boyboy::errors::UnimplementedOpcode(0x49, "BIT 1, C");
}
#endif // CPU_BIT_1_C

#ifndef CPU_BIT_1_D
void boyboy::cpu::Cpu::bit_1_d() {
    throw boyboy::errors::UnimplementedOpcode(0x4A, "BIT 1, D");
}
#endif // CPU_BIT_1_D

#ifndef CPU_BIT_1_E
void boyboy::cpu::Cpu::bit_1_e() {
    throw boyboy::errors::UnimplementedOpcode(0x4B, "BIT 1, E");
}
#endif // CPU_BIT_1_E

#ifndef CPU_BIT_1_H
void boyboy::cpu::Cpu::bit_1_h() {
    throw boyboy::errors::UnimplementedOpcode(0x4C, "BIT 1, H");
}
#endif // CPU_BIT_1_H

#ifndef CPU_BIT_1_L
void boyboy::cpu::Cpu::bit_1_l() {
    throw boyboy::errors::UnimplementedOpcode(0x4D, "BIT 1, L");
}
#endif // CPU_BIT_1_L

#ifndef CPU_BIT_1_AT_HL
void boyboy::cpu::Cpu::bit_1_at_hl() {
    throw boyboy::errors::UnimplementedOpcode(0x4E, "BIT 1, [HL]");
}
#endif // CPU_BIT_1_AT_HL

#ifndef CPU_BIT_1_A
void boyboy::cpu::Cpu::bit_1_a() {
    throw boyboy::errors::UnimplementedOpcode(0x4F, "BIT 1, A");
}
#endif // CPU_BIT_1_A

#ifndef CPU_BIT_2_B
void boyboy::cpu::Cpu::bit_2_b() {
    throw boyboy::errors::UnimplementedOpcode(0x50, "BIT 2, B");
}
#endif // CPU_BIT_2_B

#ifndef CPU_BIT_2_C
void boyboy::cpu::Cpu::bit_2_c() {
    throw boyboy::errors::UnimplementedOpcode(0x51, "BIT 2, C");
}
#endif // CPU_BIT_2_C

#ifndef CPU_BIT_2_D
void boyboy::cpu::Cpu::bit_2_d() {
    throw boyboy::errors::UnimplementedOpcode(0x52, "BIT 2, D");
}
#endif // CPU_BIT_2_D

#ifndef CPU_BIT_2_E
void boyboy::cpu::Cpu::bit_2_e() {
    throw boyboy::errors::UnimplementedOpcode(0x53, "BIT 2, E");
}
#endif // CPU_BIT_2_E

#ifndef CPU_BIT_2_H
void boyboy::cpu::Cpu::bit_2_h() {
    throw boyboy::errors::UnimplementedOpcode(0x54, "BIT 2, H");
}
#endif // CPU_BIT_2_H

#ifndef CPU_BIT_2_L
void boyboy::cpu::Cpu::bit_2_l() {
    throw boyboy::errors::UnimplementedOpcode(0x55, "BIT 2, L");
}
#endif // CPU_BIT_2_L

#ifndef CPU_BIT_2_AT_HL
void boyboy::cpu::Cpu::bit_2_at_hl() {
    throw boyboy::errors::UnimplementedOpcode(0x56, "BIT 2, [HL]");
}
#endif // CPU_BIT_2_AT_HL

#ifndef CPU_BIT_2_A
void boyboy::cpu::Cpu::bit_2_a() {
    throw boyboy::errors::UnimplementedOpcode(0x57, "BIT 2, A");
}
#endif // CPU_BIT_2_A

#ifndef CPU_BIT_3_B
void boyboy::cpu::Cpu::bit_3_b() {
    throw boyboy::errors::UnimplementedOpcode(0x58, "BIT 3, B");
}
#endif // CPU_BIT_3_B

#ifndef CPU_BIT_3_C
void boyboy::cpu::Cpu::bit_3_c() {
    throw boyboy::errors::UnimplementedOpcode(0x59, "BIT 3, C");
}
#endif // CPU_BIT_3_C

#ifndef CPU_BIT_3_D
void boyboy::cpu::Cpu::bit_3_d() {
    throw boyboy::errors::UnimplementedOpcode(0x5A, "BIT 3, D");
}
#endif // CPU_BIT_3_D

#ifndef CPU_BIT_3_E
void boyboy::cpu::Cpu::bit_3_e() {
    throw boyboy::errors::UnimplementedOpcode(0x5B, "BIT 3, E");
}
#endif // CPU_BIT_3_E

#ifndef CPU_BIT_3_H
void boyboy::cpu::Cpu::bit_3_h() {
    throw boyboy::errors::UnimplementedOpcode(0x5C, "BIT 3, H");
}
#endif // CPU_BIT_3_H

#ifndef CPU_BIT_3_L
void boyboy::cpu::Cpu::bit_3_l() {
    throw boyboy::errors::UnimplementedOpcode(0x5D, "BIT 3, L");
}
#endif // CPU_BIT_3_L

#ifndef CPU_BIT_3_AT_HL
void boyboy::cpu::Cpu::bit_3_at_hl() {
    throw boyboy::errors::UnimplementedOpcode(0x5E, "BIT 3, [HL]");
}
#endif // CPU_BIT_3_AT_HL

#ifndef CPU_BIT_3_A
void boyboy::cpu::Cpu::bit_3_a() {
    throw boyboy::errors::UnimplementedOpcode(0x5F, "BIT 3, A");
}
#endif // CPU_BIT_3_A

#ifndef CPU_BIT_4_B
void boyboy::cpu::Cpu::bit_4_b() {
    throw boyboy::errors::UnimplementedOpcode(0x60, "BIT 4, B");
}
#endif // CPU_BIT_4_B

#ifndef CPU_BIT_4_C
void boyboy::cpu::Cpu::bit_4_c() {
    throw boyboy::errors::UnimplementedOpcode(0x61, "BIT 4, C");
}
#endif // CPU_BIT_4_C

#ifndef CPU_BIT_4_D
void boyboy::cpu::Cpu::bit_4_d() {
    throw boyboy::errors::UnimplementedOpcode(0x62, "BIT 4, D");
}
#endif // CPU_BIT_4_D

#ifndef CPU_BIT_4_E
void boyboy::cpu::Cpu::bit_4_e() {
    throw boyboy::errors::UnimplementedOpcode(0x63, "BIT 4, E");
}
#endif // CPU_BIT_4_E

#ifndef CPU_BIT_4_H
void boyboy::cpu::Cpu::bit_4_h() {
    throw boyboy::errors::UnimplementedOpcode(0x64, "BIT 4, H");
}
#endif // CPU_BIT_4_H

#ifndef CPU_BIT_4_L
void boyboy::cpu::Cpu::bit_4_l() {
    throw boyboy::errors::UnimplementedOpcode(0x65, "BIT 4, L");
}
#endif // CPU_BIT_4_L

#ifndef CPU_BIT_4_AT_HL
void boyboy::cpu::Cpu::bit_4_at_hl() {
    throw boyboy::errors::UnimplementedOpcode(0x66, "BIT 4, [HL]");
}
#endif // CPU_BIT_4_AT_HL

#ifndef CPU_BIT_4_A
void boyboy::cpu::Cpu::bit_4_a() {
    throw boyboy::errors::UnimplementedOpcode(0x67, "BIT 4, A");
}
#endif // CPU_BIT_4_A

#ifndef CPU_BIT_5_B
void boyboy::cpu::Cpu::bit_5_b() {
    throw boyboy::errors::UnimplementedOpcode(0x68, "BIT 5, B");
}
#endif // CPU_BIT_5_B

#ifndef CPU_BIT_5_C
void boyboy::cpu::Cpu::bit_5_c() {
    throw boyboy::errors::UnimplementedOpcode(0x69, "BIT 5, C");
}
#endif // CPU_BIT_5_C

#ifndef CPU_BIT_5_D
void boyboy::cpu::Cpu::bit_5_d() {
    throw boyboy::errors::UnimplementedOpcode(0x6A, "BIT 5, D");
}
#endif // CPU_BIT_5_D

#ifndef CPU_BIT_5_E
void boyboy::cpu::Cpu::bit_5_e() {
    throw boyboy::errors::UnimplementedOpcode(0x6B, "BIT 5, E");
}
#endif // CPU_BIT_5_E

#ifndef CPU_BIT_5_H
void boyboy::cpu::Cpu::bit_5_h() {
    throw boyboy::errors::UnimplementedOpcode(0x6C, "BIT 5, H");
}
#endif // CPU_BIT_5_H

#ifndef CPU_BIT_5_L
void boyboy::cpu::Cpu::bit_5_l() {
    throw boyboy::errors::UnimplementedOpcode(0x6D, "BIT 5, L");
}
#endif // CPU_BIT_5_L

#ifndef CPU_BIT_5_AT_HL
void boyboy::cpu::Cpu::bit_5_at_hl() {
    throw boyboy::errors::UnimplementedOpcode(0x6E, "BIT 5, [HL]");
}
#endif // CPU_BIT_5_AT_HL

#ifndef CPU_BIT_5_A
void boyboy::cpu::Cpu::bit_5_a() {
    throw boyboy::errors::UnimplementedOpcode(0x6F, "BIT 5, A");
}
#endif // CPU_BIT_5_A

#ifndef CPU_BIT_6_B
void boyboy::cpu::Cpu::bit_6_b() {
    throw boyboy::errors::UnimplementedOpcode(0x70, "BIT 6, B");
}
#endif // CPU_BIT_6_B

#ifndef CPU_BIT_6_C
void boyboy::cpu::Cpu::bit_6_c() {
    throw boyboy::errors::UnimplementedOpcode(0x71, "BIT 6, C");
}
#endif // CPU_BIT_6_C

#ifndef CPU_BIT_6_D
void boyboy::cpu::Cpu::bit_6_d() {
    throw boyboy::errors::UnimplementedOpcode(0x72, "BIT 6, D");
}
#endif // CPU_BIT_6_D

#ifndef CPU_BIT_6_E
void boyboy::cpu::Cpu::bit_6_e() {
    throw boyboy::errors::UnimplementedOpcode(0x73, "BIT 6, E");
}
#endif // CPU_BIT_6_E

#ifndef CPU_BIT_6_H
void boyboy::cpu::Cpu::bit_6_h() {
    throw boyboy::errors::UnimplementedOpcode(0x74, "BIT 6, H");
}
#endif // CPU_BIT_6_H

#ifndef CPU_BIT_6_L
void boyboy::cpu::Cpu::bit_6_l() {
    throw boyboy::errors::UnimplementedOpcode(0x75, "BIT 6, L");
}
#endif // CPU_BIT_6_L

#ifndef CPU_BIT_6_AT_HL
void boyboy::cpu::Cpu::bit_6_at_hl() {
    throw boyboy::errors::UnimplementedOpcode(0x76, "BIT 6, [HL]");
}
#endif // CPU_BIT_6_AT_HL

#ifndef CPU_BIT_6_A
void boyboy::cpu::Cpu::bit_6_a() {
    throw boyboy::errors::UnimplementedOpcode(0x77, "BIT 6, A");
}
#endif // CPU_BIT_6_A

#ifndef CPU_BIT_7_B
void boyboy::cpu::Cpu::bit_7_b() {
    throw boyboy::errors::UnimplementedOpcode(0x78, "BIT 7, B");
}
#endif // CPU_BIT_7_B

#ifndef CPU_BIT_7_C
void boyboy::cpu::Cpu::bit_7_c() {
    throw boyboy::errors::UnimplementedOpcode(0x79, "BIT 7, C");
}
#endif // CPU_BIT_7_C

#ifndef CPU_BIT_7_D
void boyboy::cpu::Cpu::bit_7_d() {
    throw boyboy::errors::UnimplementedOpcode(0x7A, "BIT 7, D");
}
#endif // CPU_BIT_7_D

#ifndef CPU_BIT_7_E
void boyboy::cpu::Cpu::bit_7_e() {
    throw boyboy::errors::UnimplementedOpcode(0x7B, "BIT 7, E");
}
#endif // CPU_BIT_7_E

#ifndef CPU_BIT_7_H
void boyboy::cpu::Cpu::bit_7_h() {
    throw boyboy::errors::UnimplementedOpcode(0x7C, "BIT 7, H");
}
#endif // CPU_BIT_7_H

#ifndef CPU_BIT_7_L
void boyboy::cpu::Cpu::bit_7_l() {
    throw boyboy::errors::UnimplementedOpcode(0x7D, "BIT 7, L");
}
#endif // CPU_BIT_7_L

#ifndef CPU_BIT_7_AT_HL
void boyboy::cpu::Cpu::bit_7_at_hl() {
    throw boyboy::errors::UnimplementedOpcode(0x7E, "BIT 7, [HL]");
}
#endif // CPU_BIT_7_AT_HL

#ifndef CPU_BIT_7_A
void boyboy::cpu::Cpu::bit_7_a() {
    throw boyboy::errors::UnimplementedOpcode(0x7F, "BIT 7, A");
}
#endif // CPU_BIT_7_A

#ifndef CPU_RES_0_B
void boyboy::cpu::Cpu::res_0_b() {
    throw boyboy::errors::UnimplementedOpcode(0x80, "RES 0, B");
}
#endif // CPU_RES_0_B

#ifndef CPU_RES_0_C
void boyboy::cpu::Cpu::res_0_c() {
    throw boyboy::errors::UnimplementedOpcode(0x81, "RES 0, C");
}
#endif // CPU_RES_0_C

#ifndef CPU_RES_0_D
void boyboy::cpu::Cpu::res_0_d() {
    throw boyboy::errors::UnimplementedOpcode(0x82, "RES 0, D");
}
#endif // CPU_RES_0_D

#ifndef CPU_RES_0_E
void boyboy::cpu::Cpu::res_0_e() {
    throw boyboy::errors::UnimplementedOpcode(0x83, "RES 0, E");
}
#endif // CPU_RES_0_E

#ifndef CPU_RES_0_H
void boyboy::cpu::Cpu::res_0_h() {
    throw boyboy::errors::UnimplementedOpcode(0x84, "RES 0, H");
}
#endif // CPU_RES_0_H

#ifndef CPU_RES_0_L
void boyboy::cpu::Cpu::res_0_l() {
    throw boyboy::errors::UnimplementedOpcode(0x85, "RES 0, L");
}
#endif // CPU_RES_0_L

#ifndef CPU_RES_0_AT_HL
void boyboy::cpu::Cpu::res_0_at_hl() {
    throw boyboy::errors::UnimplementedOpcode(0x86, "RES 0, [HL]");
}
#endif // CPU_RES_0_AT_HL

#ifndef CPU_RES_0_A
void boyboy::cpu::Cpu::res_0_a() {
    throw boyboy::errors::UnimplementedOpcode(0x87, "RES 0, A");
}
#endif // CPU_RES_0_A

#ifndef CPU_RES_1_B
void boyboy::cpu::Cpu::res_1_b() {
    throw boyboy::errors::UnimplementedOpcode(0x88, "RES 1, B");
}
#endif // CPU_RES_1_B

#ifndef CPU_RES_1_C
void boyboy::cpu::Cpu::res_1_c() {
    throw boyboy::errors::UnimplementedOpcode(0x89, "RES 1, C");
}
#endif // CPU_RES_1_C

#ifndef CPU_RES_1_D
void boyboy::cpu::Cpu::res_1_d() {
    throw boyboy::errors::UnimplementedOpcode(0x8A, "RES 1, D");
}
#endif // CPU_RES_1_D

#ifndef CPU_RES_1_E
void boyboy::cpu::Cpu::res_1_e() {
    throw boyboy::errors::UnimplementedOpcode(0x8B, "RES 1, E");
}
#endif // CPU_RES_1_E

#ifndef CPU_RES_1_H
void boyboy::cpu::Cpu::res_1_h() {
    throw boyboy::errors::UnimplementedOpcode(0x8C, "RES 1, H");
}
#endif // CPU_RES_1_H

#ifndef CPU_RES_1_L
void boyboy::cpu::Cpu::res_1_l() {
    throw boyboy::errors::UnimplementedOpcode(0x8D, "RES 1, L");
}
#endif // CPU_RES_1_L

#ifndef CPU_RES_1_AT_HL
void boyboy::cpu::Cpu::res_1_at_hl() {
    throw boyboy::errors::UnimplementedOpcode(0x8E, "RES 1, [HL]");
}
#endif // CPU_RES_1_AT_HL

#ifndef CPU_RES_1_A
void boyboy::cpu::Cpu::res_1_a() {
    throw boyboy::errors::UnimplementedOpcode(0x8F, "RES 1, A");
}
#endif // CPU_RES_1_A

#ifndef CPU_RES_2_B
void boyboy::cpu::Cpu::res_2_b() {
    throw boyboy::errors::UnimplementedOpcode(0x90, "RES 2, B");
}
#endif // CPU_RES_2_B

#ifndef CPU_RES_2_C
void boyboy::cpu::Cpu::res_2_c() {
    throw boyboy::errors::UnimplementedOpcode(0x91, "RES 2, C");
}
#endif // CPU_RES_2_C

#ifndef CPU_RES_2_D
void boyboy::cpu::Cpu::res_2_d() {
    throw boyboy::errors::UnimplementedOpcode(0x92, "RES 2, D");
}
#endif // CPU_RES_2_D

#ifndef CPU_RES_2_E
void boyboy::cpu::Cpu::res_2_e() {
    throw boyboy::errors::UnimplementedOpcode(0x93, "RES 2, E");
}
#endif // CPU_RES_2_E

#ifndef CPU_RES_2_H
void boyboy::cpu::Cpu::res_2_h() {
    throw boyboy::errors::UnimplementedOpcode(0x94, "RES 2, H");
}
#endif // CPU_RES_2_H

#ifndef CPU_RES_2_L
void boyboy::cpu::Cpu::res_2_l() {
    throw boyboy::errors::UnimplementedOpcode(0x95, "RES 2, L");
}
#endif // CPU_RES_2_L

#ifndef CPU_RES_2_AT_HL
void boyboy::cpu::Cpu::res_2_at_hl() {
    throw boyboy::errors::UnimplementedOpcode(0x96, "RES 2, [HL]");
}
#endif // CPU_RES_2_AT_HL

#ifndef CPU_RES_2_A
void boyboy::cpu::Cpu::res_2_a() {
    throw boyboy::errors::UnimplementedOpcode(0x97, "RES 2, A");
}
#endif // CPU_RES_2_A

#ifndef CPU_RES_3_B
void boyboy::cpu::Cpu::res_3_b() {
    throw boyboy::errors::UnimplementedOpcode(0x98, "RES 3, B");
}
#endif // CPU_RES_3_B

#ifndef CPU_RES_3_C
void boyboy::cpu::Cpu::res_3_c() {
    throw boyboy::errors::UnimplementedOpcode(0x99, "RES 3, C");
}
#endif // CPU_RES_3_C

#ifndef CPU_RES_3_D
void boyboy::cpu::Cpu::res_3_d() {
    throw boyboy::errors::UnimplementedOpcode(0x9A, "RES 3, D");
}
#endif // CPU_RES_3_D

#ifndef CPU_RES_3_E
void boyboy::cpu::Cpu::res_3_e() {
    throw boyboy::errors::UnimplementedOpcode(0x9B, "RES 3, E");
}
#endif // CPU_RES_3_E

#ifndef CPU_RES_3_H
void boyboy::cpu::Cpu::res_3_h() {
    throw boyboy::errors::UnimplementedOpcode(0x9C, "RES 3, H");
}
#endif // CPU_RES_3_H

#ifndef CPU_RES_3_L
void boyboy::cpu::Cpu::res_3_l() {
    throw boyboy::errors::UnimplementedOpcode(0x9D, "RES 3, L");
}
#endif // CPU_RES_3_L

#ifndef CPU_RES_3_AT_HL
void boyboy::cpu::Cpu::res_3_at_hl() {
    throw boyboy::errors::UnimplementedOpcode(0x9E, "RES 3, [HL]");
}
#endif // CPU_RES_3_AT_HL

#ifndef CPU_RES_3_A
void boyboy::cpu::Cpu::res_3_a() {
    throw boyboy::errors::UnimplementedOpcode(0x9F, "RES 3, A");
}
#endif // CPU_RES_3_A

#ifndef CPU_RES_4_B
void boyboy::cpu::Cpu::res_4_b() {
    throw boyboy::errors::UnimplementedOpcode(0xA0, "RES 4, B");
}
#endif // CPU_RES_4_B

#ifndef CPU_RES_4_C
void boyboy::cpu::Cpu::res_4_c() {
    throw boyboy::errors::UnimplementedOpcode(0xA1, "RES 4, C");
}
#endif // CPU_RES_4_C

#ifndef CPU_RES_4_D
void boyboy::cpu::Cpu::res_4_d() {
    throw boyboy::errors::UnimplementedOpcode(0xA2, "RES 4, D");
}
#endif // CPU_RES_4_D

#ifndef CPU_RES_4_E
void boyboy::cpu::Cpu::res_4_e() {
    throw boyboy::errors::UnimplementedOpcode(0xA3, "RES 4, E");
}
#endif // CPU_RES_4_E

#ifndef CPU_RES_4_H
void boyboy::cpu::Cpu::res_4_h() {
    throw boyboy::errors::UnimplementedOpcode(0xA4, "RES 4, H");
}
#endif // CPU_RES_4_H

#ifndef CPU_RES_4_L
void boyboy::cpu::Cpu::res_4_l() {
    throw boyboy::errors::UnimplementedOpcode(0xA5, "RES 4, L");
}
#endif // CPU_RES_4_L

#ifndef CPU_RES_4_AT_HL
void boyboy::cpu::Cpu::res_4_at_hl() {
    throw boyboy::errors::UnimplementedOpcode(0xA6, "RES 4, [HL]");
}
#endif // CPU_RES_4_AT_HL

#ifndef CPU_RES_4_A
void boyboy::cpu::Cpu::res_4_a() {
    throw boyboy::errors::UnimplementedOpcode(0xA7, "RES 4, A");
}
#endif // CPU_RES_4_A

#ifndef CPU_RES_5_B
void boyboy::cpu::Cpu::res_5_b() {
    throw boyboy::errors::UnimplementedOpcode(0xA8, "RES 5, B");
}
#endif // CPU_RES_5_B

#ifndef CPU_RES_5_C
void boyboy::cpu::Cpu::res_5_c() {
    throw boyboy::errors::UnimplementedOpcode(0xA9, "RES 5, C");
}
#endif // CPU_RES_5_C

#ifndef CPU_RES_5_D
void boyboy::cpu::Cpu::res_5_d() {
    throw boyboy::errors::UnimplementedOpcode(0xAA, "RES 5, D");
}
#endif // CPU_RES_5_D

#ifndef CPU_RES_5_E
void boyboy::cpu::Cpu::res_5_e() {
    throw boyboy::errors::UnimplementedOpcode(0xAB, "RES 5, E");
}
#endif // CPU_RES_5_E

#ifndef CPU_RES_5_H
void boyboy::cpu::Cpu::res_5_h() {
    throw boyboy::errors::UnimplementedOpcode(0xAC, "RES 5, H");
}
#endif // CPU_RES_5_H

#ifndef CPU_RES_5_L
void boyboy::cpu::Cpu::res_5_l() {
    throw boyboy::errors::UnimplementedOpcode(0xAD, "RES 5, L");
}
#endif // CPU_RES_5_L

#ifndef CPU_RES_5_AT_HL
void boyboy::cpu::Cpu::res_5_at_hl() {
    throw boyboy::errors::UnimplementedOpcode(0xAE, "RES 5, [HL]");
}
#endif // CPU_RES_5_AT_HL

#ifndef CPU_RES_5_A
void boyboy::cpu::Cpu::res_5_a() {
    throw boyboy::errors::UnimplementedOpcode(0xAF, "RES 5, A");
}
#endif // CPU_RES_5_A

#ifndef CPU_RES_6_B
void boyboy::cpu::Cpu::res_6_b() {
    throw boyboy::errors::UnimplementedOpcode(0xB0, "RES 6, B");
}
#endif // CPU_RES_6_B

#ifndef CPU_RES_6_C
void boyboy::cpu::Cpu::res_6_c() {
    throw boyboy::errors::UnimplementedOpcode(0xB1, "RES 6, C");
}
#endif // CPU_RES_6_C

#ifndef CPU_RES_6_D
void boyboy::cpu::Cpu::res_6_d() {
    throw boyboy::errors::UnimplementedOpcode(0xB2, "RES 6, D");
}
#endif // CPU_RES_6_D

#ifndef CPU_RES_6_E
void boyboy::cpu::Cpu::res_6_e() {
    throw boyboy::errors::UnimplementedOpcode(0xB3, "RES 6, E");
}
#endif // CPU_RES_6_E

#ifndef CPU_RES_6_H
void boyboy::cpu::Cpu::res_6_h() {
    throw boyboy::errors::UnimplementedOpcode(0xB4, "RES 6, H");
}
#endif // CPU_RES_6_H

#ifndef CPU_RES_6_L
void boyboy::cpu::Cpu::res_6_l() {
    throw boyboy::errors::UnimplementedOpcode(0xB5, "RES 6, L");
}
#endif // CPU_RES_6_L

#ifndef CPU_RES_6_AT_HL
void boyboy::cpu::Cpu::res_6_at_hl() {
    throw boyboy::errors::UnimplementedOpcode(0xB6, "RES 6, [HL]");
}
#endif // CPU_RES_6_AT_HL

#ifndef CPU_RES_6_A
void boyboy::cpu::Cpu::res_6_a() {
    throw boyboy::errors::UnimplementedOpcode(0xB7, "RES 6, A");
}
#endif // CPU_RES_6_A

#ifndef CPU_RES_7_B
void boyboy::cpu::Cpu::res_7_b() {
    throw boyboy::errors::UnimplementedOpcode(0xB8, "RES 7, B");
}
#endif // CPU_RES_7_B

#ifndef CPU_RES_7_C
void boyboy::cpu::Cpu::res_7_c() {
    throw boyboy::errors::UnimplementedOpcode(0xB9, "RES 7, C");
}
#endif // CPU_RES_7_C

#ifndef CPU_RES_7_D
void boyboy::cpu::Cpu::res_7_d() {
    throw boyboy::errors::UnimplementedOpcode(0xBA, "RES 7, D");
}
#endif // CPU_RES_7_D

#ifndef CPU_RES_7_E
void boyboy::cpu::Cpu::res_7_e() {
    throw boyboy::errors::UnimplementedOpcode(0xBB, "RES 7, E");
}
#endif // CPU_RES_7_E

#ifndef CPU_RES_7_H
void boyboy::cpu::Cpu::res_7_h() {
    throw boyboy::errors::UnimplementedOpcode(0xBC, "RES 7, H");
}
#endif // CPU_RES_7_H

#ifndef CPU_RES_7_L
void boyboy::cpu::Cpu::res_7_l() {
    throw boyboy::errors::UnimplementedOpcode(0xBD, "RES 7, L");
}
#endif // CPU_RES_7_L

#ifndef CPU_RES_7_AT_HL
void boyboy::cpu::Cpu::res_7_at_hl() {
    throw boyboy::errors::UnimplementedOpcode(0xBE, "RES 7, [HL]");
}
#endif // CPU_RES_7_AT_HL

#ifndef CPU_RES_7_A
void boyboy::cpu::Cpu::res_7_a() {
    throw boyboy::errors::UnimplementedOpcode(0xBF, "RES 7, A");
}
#endif // CPU_RES_7_A

#ifndef CPU_SET_0_B
void boyboy::cpu::Cpu::set_0_b() {
    throw boyboy::errors::UnimplementedOpcode(0xC0, "SET 0, B");
}
#endif // CPU_SET_0_B

#ifndef CPU_SET_0_C
void boyboy::cpu::Cpu::set_0_c() {
    throw boyboy::errors::UnimplementedOpcode(0xC1, "SET 0, C");
}
#endif // CPU_SET_0_C

#ifndef CPU_SET_0_D
void boyboy::cpu::Cpu::set_0_d() {
    throw boyboy::errors::UnimplementedOpcode(0xC2, "SET 0, D");
}
#endif // CPU_SET_0_D

#ifndef CPU_SET_0_E
void boyboy::cpu::Cpu::set_0_e() {
    throw boyboy::errors::UnimplementedOpcode(0xC3, "SET 0, E");
}
#endif // CPU_SET_0_E

#ifndef CPU_SET_0_H
void boyboy::cpu::Cpu::set_0_h() {
    throw boyboy::errors::UnimplementedOpcode(0xC4, "SET 0, H");
}
#endif // CPU_SET_0_H

#ifndef CPU_SET_0_L
void boyboy::cpu::Cpu::set_0_l() {
    throw boyboy::errors::UnimplementedOpcode(0xC5, "SET 0, L");
}
#endif // CPU_SET_0_L

#ifndef CPU_SET_0_AT_HL
void boyboy::cpu::Cpu::set_0_at_hl() {
    throw boyboy::errors::UnimplementedOpcode(0xC6, "SET 0, [HL]");
}
#endif // CPU_SET_0_AT_HL

#ifndef CPU_SET_0_A
void boyboy::cpu::Cpu::set_0_a() {
    throw boyboy::errors::UnimplementedOpcode(0xC7, "SET 0, A");
}
#endif // CPU_SET_0_A

#ifndef CPU_SET_1_B
void boyboy::cpu::Cpu::set_1_b() {
    throw boyboy::errors::UnimplementedOpcode(0xC8, "SET 1, B");
}
#endif // CPU_SET_1_B

#ifndef CPU_SET_1_C
void boyboy::cpu::Cpu::set_1_c() {
    throw boyboy::errors::UnimplementedOpcode(0xC9, "SET 1, C");
}
#endif // CPU_SET_1_C

#ifndef CPU_SET_1_D
void boyboy::cpu::Cpu::set_1_d() {
    throw boyboy::errors::UnimplementedOpcode(0xCA, "SET 1, D");
}
#endif // CPU_SET_1_D

#ifndef CPU_SET_1_E
void boyboy::cpu::Cpu::set_1_e() {
    throw boyboy::errors::UnimplementedOpcode(0xCB, "SET 1, E");
}
#endif // CPU_SET_1_E

#ifndef CPU_SET_1_H
void boyboy::cpu::Cpu::set_1_h() {
    throw boyboy::errors::UnimplementedOpcode(0xCC, "SET 1, H");
}
#endif // CPU_SET_1_H

#ifndef CPU_SET_1_L
void boyboy::cpu::Cpu::set_1_l() {
    throw boyboy::errors::UnimplementedOpcode(0xCD, "SET 1, L");
}
#endif // CPU_SET_1_L

#ifndef CPU_SET_1_AT_HL
void boyboy::cpu::Cpu::set_1_at_hl() {
    throw boyboy::errors::UnimplementedOpcode(0xCE, "SET 1, [HL]");
}
#endif // CPU_SET_1_AT_HL

#ifndef CPU_SET_1_A
void boyboy::cpu::Cpu::set_1_a() {
    throw boyboy::errors::UnimplementedOpcode(0xCF, "SET 1, A");
}
#endif // CPU_SET_1_A

#ifndef CPU_SET_2_B
void boyboy::cpu::Cpu::set_2_b() {
    throw boyboy::errors::UnimplementedOpcode(0xD0, "SET 2, B");
}
#endif // CPU_SET_2_B

#ifndef CPU_SET_2_C
void boyboy::cpu::Cpu::set_2_c() {
    throw boyboy::errors::UnimplementedOpcode(0xD1, "SET 2, C");
}
#endif // CPU_SET_2_C

#ifndef CPU_SET_2_D
void boyboy::cpu::Cpu::set_2_d() {
    throw boyboy::errors::UnimplementedOpcode(0xD2, "SET 2, D");
}
#endif // CPU_SET_2_D

#ifndef CPU_SET_2_E
void boyboy::cpu::Cpu::set_2_e() {
    throw boyboy::errors::UnimplementedOpcode(0xD3, "SET 2, E");
}
#endif // CPU_SET_2_E

#ifndef CPU_SET_2_H
void boyboy::cpu::Cpu::set_2_h() {
    throw boyboy::errors::UnimplementedOpcode(0xD4, "SET 2, H");
}
#endif // CPU_SET_2_H

#ifndef CPU_SET_2_L
void boyboy::cpu::Cpu::set_2_l() {
    throw boyboy::errors::UnimplementedOpcode(0xD5, "SET 2, L");
}
#endif // CPU_SET_2_L

#ifndef CPU_SET_2_AT_HL
void boyboy::cpu::Cpu::set_2_at_hl() {
    throw boyboy::errors::UnimplementedOpcode(0xD6, "SET 2, [HL]");
}
#endif // CPU_SET_2_AT_HL

#ifndef CPU_SET_2_A
void boyboy::cpu::Cpu::set_2_a() {
    throw boyboy::errors::UnimplementedOpcode(0xD7, "SET 2, A");
}
#endif // CPU_SET_2_A

#ifndef CPU_SET_3_B
void boyboy::cpu::Cpu::set_3_b() {
    throw boyboy::errors::UnimplementedOpcode(0xD8, "SET 3, B");
}
#endif // CPU_SET_3_B

#ifndef CPU_SET_3_C
void boyboy::cpu::Cpu::set_3_c() {
    throw boyboy::errors::UnimplementedOpcode(0xD9, "SET 3, C");
}
#endif // CPU_SET_3_C

#ifndef CPU_SET_3_D
void boyboy::cpu::Cpu::set_3_d() {
    throw boyboy::errors::UnimplementedOpcode(0xDA, "SET 3, D");
}
#endif // CPU_SET_3_D

#ifndef CPU_SET_3_E
void boyboy::cpu::Cpu::set_3_e() {
    throw boyboy::errors::UnimplementedOpcode(0xDB, "SET 3, E");
}
#endif // CPU_SET_3_E

#ifndef CPU_SET_3_H
void boyboy::cpu::Cpu::set_3_h() {
    throw boyboy::errors::UnimplementedOpcode(0xDC, "SET 3, H");
}
#endif // CPU_SET_3_H

#ifndef CPU_SET_3_L
void boyboy::cpu::Cpu::set_3_l() {
    throw boyboy::errors::UnimplementedOpcode(0xDD, "SET 3, L");
}
#endif // CPU_SET_3_L

#ifndef CPU_SET_3_AT_HL
void boyboy::cpu::Cpu::set_3_at_hl() {
    throw boyboy::errors::UnimplementedOpcode(0xDE, "SET 3, [HL]");
}
#endif // CPU_SET_3_AT_HL

#ifndef CPU_SET_3_A
void boyboy::cpu::Cpu::set_3_a() {
    throw boyboy::errors::UnimplementedOpcode(0xDF, "SET 3, A");
}
#endif // CPU_SET_3_A

#ifndef CPU_SET_4_B
void boyboy::cpu::Cpu::set_4_b() {
    throw boyboy::errors::UnimplementedOpcode(0xE0, "SET 4, B");
}
#endif // CPU_SET_4_B

#ifndef CPU_SET_4_C
void boyboy::cpu::Cpu::set_4_c() {
    throw boyboy::errors::UnimplementedOpcode(0xE1, "SET 4, C");
}
#endif // CPU_SET_4_C

#ifndef CPU_SET_4_D
void boyboy::cpu::Cpu::set_4_d() {
    throw boyboy::errors::UnimplementedOpcode(0xE2, "SET 4, D");
}
#endif // CPU_SET_4_D

#ifndef CPU_SET_4_E
void boyboy::cpu::Cpu::set_4_e() {
    throw boyboy::errors::UnimplementedOpcode(0xE3, "SET 4, E");
}
#endif // CPU_SET_4_E

#ifndef CPU_SET_4_H
void boyboy::cpu::Cpu::set_4_h() {
    throw boyboy::errors::UnimplementedOpcode(0xE4, "SET 4, H");
}
#endif // CPU_SET_4_H

#ifndef CPU_SET_4_L
void boyboy::cpu::Cpu::set_4_l() {
    throw boyboy::errors::UnimplementedOpcode(0xE5, "SET 4, L");
}
#endif // CPU_SET_4_L

#ifndef CPU_SET_4_AT_HL
void boyboy::cpu::Cpu::set_4_at_hl() {
    throw boyboy::errors::UnimplementedOpcode(0xE6, "SET 4, [HL]");
}
#endif // CPU_SET_4_AT_HL

#ifndef CPU_SET_4_A
void boyboy::cpu::Cpu::set_4_a() {
    throw boyboy::errors::UnimplementedOpcode(0xE7, "SET 4, A");
}
#endif // CPU_SET_4_A

#ifndef CPU_SET_5_B
void boyboy::cpu::Cpu::set_5_b() {
    throw boyboy::errors::UnimplementedOpcode(0xE8, "SET 5, B");
}
#endif // CPU_SET_5_B

#ifndef CPU_SET_5_C
void boyboy::cpu::Cpu::set_5_c() {
    throw boyboy::errors::UnimplementedOpcode(0xE9, "SET 5, C");
}
#endif // CPU_SET_5_C

#ifndef CPU_SET_5_D
void boyboy::cpu::Cpu::set_5_d() {
    throw boyboy::errors::UnimplementedOpcode(0xEA, "SET 5, D");
}
#endif // CPU_SET_5_D

#ifndef CPU_SET_5_E
void boyboy::cpu::Cpu::set_5_e() {
    throw boyboy::errors::UnimplementedOpcode(0xEB, "SET 5, E");
}
#endif // CPU_SET_5_E

#ifndef CPU_SET_5_H
void boyboy::cpu::Cpu::set_5_h() {
    throw boyboy::errors::UnimplementedOpcode(0xEC, "SET 5, H");
}
#endif // CPU_SET_5_H

#ifndef CPU_SET_5_L
void boyboy::cpu::Cpu::set_5_l() {
    throw boyboy::errors::UnimplementedOpcode(0xED, "SET 5, L");
}
#endif // CPU_SET_5_L

#ifndef CPU_SET_5_AT_HL
void boyboy::cpu::Cpu::set_5_at_hl() {
    throw boyboy::errors::UnimplementedOpcode(0xEE, "SET 5, [HL]");
}
#endif // CPU_SET_5_AT_HL

#ifndef CPU_SET_5_A
void boyboy::cpu::Cpu::set_5_a() {
    throw boyboy::errors::UnimplementedOpcode(0xEF, "SET 5, A");
}
#endif // CPU_SET_5_A

#ifndef CPU_SET_6_B
void boyboy::cpu::Cpu::set_6_b() {
    throw boyboy::errors::UnimplementedOpcode(0xF0, "SET 6, B");
}
#endif // CPU_SET_6_B

#ifndef CPU_SET_6_C
void boyboy::cpu::Cpu::set_6_c() {
    throw boyboy::errors::UnimplementedOpcode(0xF1, "SET 6, C");
}
#endif // CPU_SET_6_C

#ifndef CPU_SET_6_D
void boyboy::cpu::Cpu::set_6_d() {
    throw boyboy::errors::UnimplementedOpcode(0xF2, "SET 6, D");
}
#endif // CPU_SET_6_D

#ifndef CPU_SET_6_E
void boyboy::cpu::Cpu::set_6_e() {
    throw boyboy::errors::UnimplementedOpcode(0xF3, "SET 6, E");
}
#endif // CPU_SET_6_E

#ifndef CPU_SET_6_H
void boyboy::cpu::Cpu::set_6_h() {
    throw boyboy::errors::UnimplementedOpcode(0xF4, "SET 6, H");
}
#endif // CPU_SET_6_H

#ifndef CPU_SET_6_L
void boyboy::cpu::Cpu::set_6_l() {
    throw boyboy::errors::UnimplementedOpcode(0xF5, "SET 6, L");
}
#endif // CPU_SET_6_L

#ifndef CPU_SET_6_AT_HL
void boyboy::cpu::Cpu::set_6_at_hl() {
    throw boyboy::errors::UnimplementedOpcode(0xF6, "SET 6, [HL]");
}
#endif // CPU_SET_6_AT_HL

#ifndef CPU_SET_6_A
void boyboy::cpu::Cpu::set_6_a() {
    throw boyboy::errors::UnimplementedOpcode(0xF7, "SET 6, A");
}
#endif // CPU_SET_6_A

#ifndef CPU_SET_7_B
void boyboy::cpu::Cpu::set_7_b() {
    throw boyboy::errors::UnimplementedOpcode(0xF8, "SET 7, B");
}
#endif // CPU_SET_7_B

#ifndef CPU_SET_7_C
void boyboy::cpu::Cpu::set_7_c() {
    throw boyboy::errors::UnimplementedOpcode(0xF9, "SET 7, C");
}
#endif // CPU_SET_7_C

#ifndef CPU_SET_7_D
void boyboy::cpu::Cpu::set_7_d() {
    throw boyboy::errors::UnimplementedOpcode(0xFA, "SET 7, D");
}
#endif // CPU_SET_7_D

#ifndef CPU_SET_7_E
void boyboy::cpu::Cpu::set_7_e() {
    throw boyboy::errors::UnimplementedOpcode(0xFB, "SET 7, E");
}
#endif // CPU_SET_7_E

#ifndef CPU_SET_7_H
void boyboy::cpu::Cpu::set_7_h() {
    throw boyboy::errors::UnimplementedOpcode(0xFC, "SET 7, H");
}
#endif // CPU_SET_7_H

#ifndef CPU_SET_7_L
void boyboy::cpu::Cpu::set_7_l() {
    throw boyboy::errors::UnimplementedOpcode(0xFD, "SET 7, L");
}
#endif // CPU_SET_7_L

#ifndef CPU_SET_7_AT_HL
void boyboy::cpu::Cpu::set_7_at_hl() {
    throw boyboy::errors::UnimplementedOpcode(0xFE, "SET 7, [HL]");
}
#endif // CPU_SET_7_AT_HL

#ifndef CPU_SET_7_A
void boyboy::cpu::Cpu::set_7_a() {
    throw boyboy::errors::UnimplementedOpcode(0xFF, "SET 7, A");
}
#endif // CPU_SET_7_A

